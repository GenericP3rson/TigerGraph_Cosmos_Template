{"id":"node_modules/@cosmograph/cosmos/dist/index.js","dependencies":[{"name":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js.map","includedInParent":true,"mtime":1655388468855},{"name":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/package.json","includedInParent":true,"mtime":1655388515940},{"name":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/package.json","includedInParent":true,"mtime":1655388468836},{"name":"d3-selection","loc":{"line":1,"column":23,"index":23},"parent":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js","resolved":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/d3-selection/src/index.js"},{"name":"d3-transition","loc":{"line":2,"column":7,"index":46},"parent":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js","resolved":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/d3-transition/src/index.js"},{"name":"d3-zoom","loc":{"line":3,"column":35,"index":98},"parent":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js","resolved":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/d3-zoom/src/index.js"},{"name":"regl","loc":{"line":4,"column":17,"index":126},"parent":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js","resolved":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/regl/dist/regl.js"},{"name":"d3-color","loc":{"line":5,"column":22,"index":156},"parent":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js","resolved":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/d3-color/src/index.js"},{"name":"gl-matrix","loc":{"line":6,"column":21,"index":189},"parent":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/@cosmograph/cosmos/dist/index.js","resolved":"/Users/shreya/Desktop/TG_Stuff/CGJSII/cosmos_test/node_modules/gl-matrix/esm/index.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Graph = void 0;\n\nvar _d3Selection = require(\"d3-selection\");\n\nrequire(\"d3-transition\");\n\nvar _d3Zoom = require(\"d3-zoom\");\n\nvar _regl = _interopRequireDefault(require(\"regl\"));\n\nvar _d3Color = require(\"d3-color\");\n\nvar _glMatrix = require(\"gl-matrix\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar defaultNodeColor = '#b3b3b3';\nvar defaultNodeSize = 4;\nvar defaultLinkColor = '#666666';\nvar defaultLinkWidth = 1;\nvar defaultBackgroundColor = '#222222';\nvar defaultConfigValues = {\n  spaceSize: 4096,\n  nodeSizeScale: 1,\n  linkWidthScale: 1,\n  arrowSizeScale: 1,\n  renderLinks: true,\n  arrowLinks: true,\n  linkVisibilityDistanceRange: [50, 150],\n  linkVisibilityMinTransparency: 0.25,\n  useQuadtree: false,\n  simulation: {\n    decay: 1000,\n    gravity: 0,\n    center: 0,\n    repulsion: 0.1,\n    repulsionTheta: 1.7,\n    repulsionQuadtreeLevels: 12,\n    linkSpring: 1,\n    linkDistance: 2,\n    linkDistRandomVariationRange: [1, 1.2],\n    repulsionFromMouse: 2,\n    friction: 0.85\n  },\n  showFPSMonitor: false,\n  pixelRatio: 2\n};\n\nvar GraphConfig = /*#__PURE__*/function () {\n  function GraphConfig() {\n    _classCallCheck(this, GraphConfig);\n\n    this.backgroundColor = defaultBackgroundColor;\n    this.spaceSize = defaultConfigValues.spaceSize;\n    this.nodeColor = defaultNodeColor;\n    this.nodeSize = defaultNodeSize;\n    this.nodeSizeScale = defaultConfigValues.nodeSizeScale;\n    this.linkColor = defaultLinkColor;\n    this.linkWidth = defaultLinkWidth;\n    this.linkWidthScale = defaultConfigValues.linkWidthScale;\n    this.renderLinks = defaultConfigValues.renderLinks;\n    this.linkArrows = defaultConfigValues.arrowLinks;\n    this.linkArrowsSizeScale = defaultConfigValues.arrowSizeScale;\n    this.linkVisibilityDistanceRange = defaultConfigValues.linkVisibilityDistanceRange;\n    this.linkVisibilityMinTransparency = defaultConfigValues.linkVisibilityMinTransparency;\n    this.useQuadtree = defaultConfigValues.useQuadtree;\n    this.simulation = {\n      decay: defaultConfigValues.simulation.decay,\n      gravity: defaultConfigValues.simulation.gravity,\n      center: defaultConfigValues.simulation.center,\n      repulsion: defaultConfigValues.simulation.repulsion,\n      repulsionTheta: defaultConfigValues.simulation.repulsionTheta,\n      repulsionQuadtreeLevels: defaultConfigValues.simulation.repulsionQuadtreeLevels,\n      linkSpring: defaultConfigValues.simulation.linkSpring,\n      linkDistance: defaultConfigValues.simulation.linkDistance,\n      linkDistRandomVariationRange: defaultConfigValues.simulation.linkDistRandomVariationRange,\n      repulsionFromMouse: defaultConfigValues.simulation.repulsionFromMouse,\n      friction: defaultConfigValues.simulation.friction,\n      onStart: undefined,\n      onTick: undefined,\n      onEnd: undefined,\n      onPause: undefined,\n      onRestart: undefined\n    };\n    this.events = {\n      onClick: undefined\n    };\n    this.showFPSMonitor = defaultConfigValues.showFPSMonitor;\n    this.pixelRatio = defaultConfigValues.pixelRatio;\n  }\n\n  _createClass(GraphConfig, [{\n    key: \"init\",\n    value: function init(config) {\n      var currentConfig = this.getConfig();\n      var keys = Object.keys(config).map(function (key) {\n        return key;\n      });\n      keys.forEach(function (key) {\n        if (_typeof(currentConfig[key]) === 'object') {\n          currentConfig[key] = _objectSpread(_objectSpread({}, currentConfig[key]), config[key]);\n        } else {\n          currentConfig[key] = config[key];\n        }\n      });\n      return currentConfig;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this;\n    }\n  }]);\n\n  return GraphConfig;\n}();\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction getValue(d, accessor, index) {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  if (isFunction(accessor)) return accessor(d, index);else return accessor;\n}\n\nfunction getRgbaColor(value) {\n  var _a;\n\n  var rgba;\n\n  if (Array.isArray(value)) {\n    rgba = value;\n  } else {\n    var color$1 = (0, _d3Color.color)(value);\n    var rgb = color$1 === null || color$1 === void 0 ? void 0 : color$1.rgb();\n    rgba = [(rgb === null || rgb === void 0 ? void 0 : rgb.r) || 0, (rgb === null || rgb === void 0 ? void 0 : rgb.g) || 0, (rgb === null || rgb === void 0 ? void 0 : rgb.b) || 0, (_a = color$1 === null || color$1 === void 0 ? void 0 : color$1.opacity) !== null && _a !== void 0 ? _a : 1];\n  }\n\n  return [rgba[0] / 255, rgba[1] / 255, rgba[2] / 255, rgba[3]];\n}\n\nfunction readPixels(reglInstance, fbo) {\n  var resultPixels = new Float32Array();\n  reglInstance({\n    framebuffer: fbo\n  })(function () {\n    resultPixels = reglInstance.read();\n  });\n  return resultPixels;\n}\n\nfunction group(array, accessor) {\n  var groups = new Map();\n  array.forEach(function (item) {\n    var key = accessor(item);\n    var group = groups.get(key);\n    if (group) group.push(item);else groups.set(key, [item]);\n  });\n  return groups;\n}\n\nfunction getRandomValue(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nvar CoreModule = /*#__PURE__*/_createClass(function CoreModule(reglInstance, config, store, data, points) {\n  _classCallCheck(this, CoreModule);\n\n  this.reglInstance = reglInstance;\n  this.config = config;\n  this.store = store;\n  this.data = data;\n  if (points) this.points = points;\n});\n\nvar calculateCentermassFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\n\nvar calculateCentermassVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;attribute vec2 indexes;varying vec4 rgba;void main(){vec4 pointPosition=texture2D(position,indexes/pointsTextureSize);rgba=vec4(pointPosition.xy,1.0,0.0);gl_Position=vec4(0.0,0.0,0.0,1.0);gl_PointSize=1.0;}\"; // eslint-disable-line\n\nvar forceFrag$5 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D centermass;uniform float center;uniform float alpha;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec4 centermassValues=texture2D(centermass,vec2(0.0));vec2 centermassPosition=centermassValues.xy/centermassValues.b;vec2 distVector=centermassPosition-pointPosition.xy;float dist=sqrt(dot(distVector,distVector));if(dist>0.0){float angle=atan(distVector.y,distVector.x);float addV=alpha*center*dist*0.01;velocity.rg+=addV*vec2(cos(angle),sin(angle));}gl_FragColor=velocity;}\"; // eslint-disable-line\n\nfunction createQuadBuffer(reglInstance) {\n  var quadBuffer = reglInstance.buffer(new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]));\n  return {\n    buffer: quadBuffer,\n    size: 2\n  };\n}\n\nfunction createIndexesBuffer(reglInstance, textureSize) {\n  var indexes = new Float32Array(textureSize * textureSize * 2);\n\n  for (var y = 0; y < textureSize; y++) {\n    for (var x = 0; x < textureSize; x++) {\n      var i = y * textureSize * 2 + x * 2;\n      indexes[i + 0] = x;\n      indexes[i + 1] = y;\n    }\n  }\n\n  var indexBuffer = reglInstance.buffer(indexes);\n  return {\n    buffer: indexBuffer,\n    size: 2\n  };\n}\n\nvar clearFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec2 index;void main(){gl_FragColor=vec4(0.0);}\"; // eslint-disable-line\n\nvar updateVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nattribute vec2 quad;varying vec2 index;void main(){index=(quad+1.0)/2.0;gl_Position=vec4(quad,0,1);}\"; // eslint-disable-line\n\nvar ForceCenter = /*#__PURE__*/function (_CoreModule) {\n  _inherits(ForceCenter, _CoreModule);\n\n  var _super = _createSuper(ForceCenter);\n\n  function ForceCenter() {\n    _classCallCheck(this, ForceCenter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ForceCenter, [{\n    key: \"create\",\n    value: function create() {\n      var reglInstance = this.reglInstance;\n      this.centermassFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: new Float32Array(4).fill(0),\n          shape: [1, 1, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _this = this;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          data = this.data,\n          points = this.points;\n      this.clearCentermassCommand = reglInstance({\n        frag: clearFrag,\n        vert: updateVert,\n        framebuffer: this.centermassFbo,\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        }\n      });\n      this.calculateCentermassCommand = reglInstance({\n        frag: calculateCentermassFrag,\n        vert: calculateCentermassVert,\n        framebuffer: function framebuffer() {\n          return _this.centermassFbo;\n        },\n        primitive: 'points',\n        count: function count() {\n          return data.nodes.length;\n        },\n        attributes: {\n          indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          pointsTextureSize: function pointsTextureSize() {\n            return store.pointsTextureSize;\n          }\n        },\n        blend: {\n          enable: true,\n          func: {\n            src: 'one',\n            dst: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        },\n        stencil: {\n          enable: false\n        }\n      });\n      this.runCommand = reglInstance({\n        frag: forceFrag$5,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          centermass: function centermass() {\n            return _this.centermassFbo;\n          },\n          center: function center() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.center;\n          },\n          alpha: function alpha() {\n            return store.alpha;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _a, _b, _c;\n\n      (_a = this.clearCentermassCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n      (_b = this.calculateCentermassCommand) === null || _b === void 0 ? void 0 : _b.call(this);\n      (_c = this.runCommand) === null || _c === void 0 ? void 0 : _c.call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n\n      (_a = this.centermassFbo) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n  }]);\n\n  return ForceCenter;\n}(CoreModule);\n\nvar forceFrag$4 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float gravity;uniform float spaceSize;uniform float alpha;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec2 centerPosition=vec2(spaceSize/2.0);vec2 distVector=centerPosition-pointPosition.rg;float dist=sqrt(dot(distVector,distVector));if(dist>0.0){float angle=atan(distVector.y,distVector.x);float addV=alpha*gravity*dist*0.1;velocity.rg+=addV*vec2(cos(angle),sin(angle));}gl_FragColor=velocity;}\"; // eslint-disable-line\n\nvar ForceGravity = /*#__PURE__*/function (_CoreModule2) {\n  _inherits(ForceGravity, _CoreModule2);\n\n  var _super2 = _createSuper(ForceGravity);\n\n  function ForceGravity() {\n    _classCallCheck(this, ForceGravity);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ForceGravity, [{\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          points = this.points;\n      this.runCommand = reglInstance({\n        frag: forceFrag$4,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          gravity: function gravity() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.gravity;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          },\n          alpha: function alpha() {\n            return store.alpha;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _a;\n\n      (_a = this.runCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }]);\n\n  return ForceGravity;\n}(CoreModule);\n\nfunction forceFrag$3(maxLinks) {\n  return \"\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nuniform sampler2D position;\\nuniform float linkSpring;\\nuniform float linkDistance;\\nuniform vec2 linkDistRandomVariationRange;\\n\\nuniform sampler2D linkFirstIndicesAndAmount;\\nuniform sampler2D linkIndices;\\nuniform sampler2D linkBiasAndStrength;\\nuniform sampler2D linkRandomDistanceFbo;\\n\\nuniform float pointsTextureSize;\\nuniform float linksTextureSize;\\nuniform float alpha;\\n\\nvarying vec2 index;\\n\\nconst float MAX_LINKS = \".concat(maxLinks, \".0;\\n\\nvoid main() {\\n  vec4 pointPosition = texture2D(position, index);\\n  vec4 velocity = vec4(0.0);\\n\\n  vec4 linkFirstIJAndAmount = texture2D(linkFirstIndicesAndAmount, index);\\n  float iCount = linkFirstIJAndAmount.r;\\n  float jCount = linkFirstIJAndAmount.g;\\n  float linkAmount = linkFirstIJAndAmount.b;\\n  if (linkAmount > 0.0) {\\n    for (float i = 0.0; i < MAX_LINKS; i += 1.0) {\\n      if (i < linkAmount) {\\n        if (iCount >= linksTextureSize) {\\n          iCount = 0.0;\\n          jCount += 1.0;\\n        }\\n        vec2 linkTextureIndex = (vec2(iCount, jCount) + 0.5) / linksTextureSize;\\n        vec4 connectedPointIndex = texture2D(linkIndices, linkTextureIndex);\\n        vec4 biasAndStrength = texture2D(linkBiasAndStrength, linkTextureIndex);\\n        vec4 randomMinDistance = texture2D(linkRandomDistanceFbo, linkTextureIndex);\\n        float bias = biasAndStrength.r;\\n        float strength = biasAndStrength.g;\\n        float randomMinLinkDist = randomMinDistance.r * (linkDistRandomVariationRange.g - linkDistRandomVariationRange.r) + linkDistRandomVariationRange.r;\\n        randomMinLinkDist *= linkDistance;\\n\\n        iCount += 1.0;\\n\\n        vec4 connectedPointPosition = texture2D(position, (connectedPointIndex.rg + 0.5) / pointsTextureSize);\\n        float x = connectedPointPosition.x - (pointPosition.x + velocity.x);\\n        float y = connectedPointPosition.y - (pointPosition.y + velocity.y);\\n        float l = sqrt(x * x + y * y);\\n        l = max(l, randomMinLinkDist * 0.99);\\n        l = (l - randomMinLinkDist) / l;\\n        l *= linkSpring * alpha;\\n        l *= strength;\\n        l *= bias;\\n        x *= l;\\n        y *= l;\\n        velocity.x += x;\\n        velocity.y += y;\\n      }\\n    }\\n  }\\n\\n  gl_FragColor = vec4(velocity.rg, 0.0, 0.0);\\n}\\n  \");\n}\n\nvar LinkDirection;\n\n(function (LinkDirection) {\n  LinkDirection[\"OUTCOMING\"] = \"outcoming\";\n  LinkDirection[\"INCOMING\"] = \"incoming\";\n})(LinkDirection || (LinkDirection = {}));\n\nvar ForceLink = /*#__PURE__*/function (_CoreModule3) {\n  _inherits(ForceLink, _CoreModule3);\n\n  var _super3 = _createSuper(ForceLink);\n\n  function ForceLink() {\n    var _this2;\n\n    _classCallCheck(this, ForceLink);\n\n    _this2 = _super3.apply(this, arguments);\n    _this2.linkFirstIndicesAndAmount = new Float32Array();\n    _this2.indices = new Float32Array();\n    _this2.maxPointDegree = 0;\n    return _this2;\n  }\n\n  _createClass(ForceLink, [{\n    key: \"create\",\n    value: function create(direction) {\n      var _this3 = this;\n\n      var reglInstance = this.reglInstance,\n          _this$store = this.store,\n          pointsTextureSize = _this$store.pointsTextureSize,\n          linksTextureSize = _this$store.linksTextureSize,\n          links = this.data.links;\n      this.linkFirstIndicesAndAmount = new Float32Array(pointsTextureSize * pointsTextureSize * 4);\n      this.indices = new Float32Array(linksTextureSize * linksTextureSize * 4);\n      var linkBiasAndStrengthState = new Float32Array(linksTextureSize * linksTextureSize * 4);\n      var linkDistanceState = new Float32Array(linksTextureSize * linksTextureSize * 4);\n      var linksByDirection = group(links, function (d) {\n        return direction === LinkDirection.INCOMING ? d.to : d.from;\n      });\n      this.maxPointDegree = 0;\n      var linkIndex = 0;\n      linksByDirection.forEach(function (oneDirectionLinks, nodeId) {\n        _this3.linkFirstIndicesAndAmount[nodeId * 4 + 0] = linkIndex % linksTextureSize;\n        _this3.linkFirstIndicesAndAmount[nodeId * 4 + 1] = Math.floor(linkIndex / linksTextureSize);\n        _this3.linkFirstIndicesAndAmount[nodeId * 4 + 2] = oneDirectionLinks.length;\n        oneDirectionLinks.forEach(function (link) {\n          var _a, _b, _c, _d, _e;\n\n          var connectedNodeId = direction === LinkDirection.OUTCOMING ? link.to : link.from;\n          _this3.indices[linkIndex * 4 + 0] = connectedNodeId % pointsTextureSize;\n          _this3.indices[linkIndex * 4 + 1] = Math.floor(connectedNodeId / pointsTextureSize);\n          var bias = ((_a = link.source.degree) !== null && _a !== void 0 ? _a : 0) / (((_b = link.source.degree) !== null && _b !== void 0 ? _b : 0) + ((_c = link.target.degree) !== null && _c !== void 0 ? _c : 0));\n          if (direction === LinkDirection.OUTCOMING) bias = 1 - bias;\n          var strength = 1 / Math.min((_d = link.source.degree) !== null && _d !== void 0 ? _d : 0, (_e = link.target.degree) !== null && _e !== void 0 ? _e : 0);\n          strength = Math.sqrt(strength);\n          linkBiasAndStrengthState[linkIndex * 4 + 0] = bias;\n          linkBiasAndStrengthState[linkIndex * 4 + 1] = strength;\n          linkDistanceState[linkIndex * 4] = Math.random(); // link distance random variation\n\n          linkIndex += 1;\n        });\n        _this3.maxPointDegree = Math.max(_this3.maxPointDegree, oneDirectionLinks.length);\n      });\n      this.linkFirstIndicesAndAmountFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: this.linkFirstIndicesAndAmount,\n          shape: [pointsTextureSize, pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n      this.indicesFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: this.indices,\n          shape: [linksTextureSize, linksTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n      this.biasAndStrengthFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: linkBiasAndStrengthState,\n          shape: [linksTextureSize, linksTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n      this.randomDistanceFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: linkDistanceState,\n          shape: [linksTextureSize, linksTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _this4 = this;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          points = this.points;\n      this.runCommand = reglInstance({\n        frag: function frag() {\n          return forceFrag$3(_this4.maxPointDegree);\n        },\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          linkSpring: function linkSpring() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkSpring;\n          },\n          linkDistance: function linkDistance() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkDistance;\n          },\n          linkDistRandomVariationRange: function linkDistRandomVariationRange() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.linkDistRandomVariationRange;\n          },\n          linkFirstIndicesAndAmount: function linkFirstIndicesAndAmount() {\n            return _this4.linkFirstIndicesAndAmountFbo;\n          },\n          linkIndices: function linkIndices() {\n            return _this4.indicesFbo;\n          },\n          linkBiasAndStrength: function linkBiasAndStrength() {\n            return _this4.biasAndStrengthFbo;\n          },\n          linkRandomDistanceFbo: function linkRandomDistanceFbo() {\n            return _this4.randomDistanceFbo;\n          },\n          pointsTextureSize: function pointsTextureSize() {\n            return store.pointsTextureSize;\n          },\n          linksTextureSize: function linksTextureSize() {\n            return store.linksTextureSize;\n          },\n          alpha: function alpha() {\n            return store.alpha;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _a;\n\n      (_a = this.runCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b, _c, _d;\n\n      (_a = this.linkFirstIndicesAndAmountFbo) === null || _a === void 0 ? void 0 : _a.destroy();\n      (_b = this.indicesFbo) === null || _b === void 0 ? void 0 : _b.destroy();\n      (_c = this.biasAndStrengthFbo) === null || _c === void 0 ? void 0 : _c.destroy();\n      (_d = this.randomDistanceFbo) === null || _d === void 0 ? void 0 : _d.destroy();\n    }\n  }]);\n\n  return ForceLink;\n}(CoreModule);\n\nvar calculateLevelFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec4 rgba;void main(){gl_FragColor=rgba;}\"; // eslint-disable-line\n\nvar calculateLevelVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float pointsTextureSize;uniform float levelTextureSize;uniform float cellSize;attribute vec2 indexes;varying vec4 rgba;void main(){vec4 pointPosition=texture2D(position,indexes/pointsTextureSize);rgba=vec4(pointPosition.rg,1.0,0.0);float n=floor(pointPosition.x/cellSize);float m=floor(pointPosition.y/cellSize);vec2 levelPosition=2.0*(vec2(n,m)+0.5)/levelTextureSize-1.0;gl_Position=vec4(levelPosition,0.0,1.0);gl_PointSize=1.0;}\"; // eslint-disable-line\n\nvar forceFrag$2 = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D levelFbo;uniform float level;uniform float levels;uniform float levelTextureSize;uniform float repulsion;uniform float alpha;uniform float spaceSize;uniform float theta;varying vec2 index;const float MAX_LEVELS_NUM=14.0;vec2 calcAdd(vec2 ij,vec2 pp){vec2 add=vec2(0.0);vec4 centermass=texture2D(levelFbo,ij);if(centermass.r>0.0&&centermass.g>0.0&&centermass.b>0.0){vec2 centermassPosition=vec2(centermass.rg/centermass.b);vec2 distVector=pp-centermassPosition;float l=dot(distVector,distVector);float dist=sqrt(l);if(l>0.0){float angle=atan(distVector.y,distVector.x);float c=alpha*repulsion*centermass.b;float distanceMin2=1.0;if(l<distanceMin2)l=sqrt(distanceMin2*l);float addV=c/sqrt(l);add=addV*vec2(cos(angle),sin(angle));}}return add;}void main(){vec4 pointPosition=texture2D(position,index);float x=pointPosition.x;float y=pointPosition.y;float left=0.0;float top=0.0;float right=spaceSize;float bottom=spaceSize;float n_left=0.0;float n_top=0.0;float n_right=0.0;float n_bottom=0.0;float cellSize=0.0;for(float i=0.0;i<MAX_LEVELS_NUM;i+=1.0){if(i<=level){left+=cellSize*n_left;top+=cellSize*n_top;right-=cellSize*n_right;bottom-=cellSize*n_bottom;cellSize=pow(2.0,levels-i-1.0);float dist_left=x-left;n_left=max(0.0,floor(dist_left/cellSize-theta));float dist_top=y-top;n_top=max(0.0,floor(dist_top/cellSize-theta));float dist_right=right-x;n_right=max(0.0,floor(dist_right/cellSize-theta));float dist_bottom=bottom-y;n_bottom=max(0.0,floor(dist_bottom/cellSize-theta));}}vec4 velocity=vec4(vec2(0.0),1.0,0.0);for(float i=0.0;i<12.0;i+=1.0){for(float j=0.0;j<4.0;j+=1.0){float n=left+cellSize*j;float m=top+cellSize*n_top+cellSize*i;if(n<(left+n_left*cellSize)&&m<bottom){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=left+cellSize*i;m=top+cellSize*j;if(n<(right-n_right*cellSize)&&m<(top+n_top*cellSize)){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=right-n_right*cellSize+cellSize*j;m=top+cellSize*i;if(n<right&&m<(bottom-n_bottom*cellSize)){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}n=left+n_left*cellSize+cellSize*i;m=bottom-n_bottom*cellSize+cellSize*j;if(n<right&&m<bottom){velocity.xy+=calcAdd(vec2(n/cellSize,m/cellSize)/levelTextureSize,pointPosition.xy);}}}gl_FragColor=velocity;}\"; // eslint-disable-line\n\nvar forceCenterFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D levelFbo;uniform sampler2D randomValues;uniform float levelTextureSize;uniform float repulsion;uniform float alpha;varying vec2 index;vec2 calcAdd(vec2 ij,vec2 pp){vec2 add=vec2(0.0);vec4 centermass=texture2D(levelFbo,ij);if(centermass.r>0.0&&centermass.g>0.0&&centermass.b>0.0){vec2 centermassPosition=vec2(centermass.rg/centermass.b);vec2 distVector=pp-centermassPosition;float l=dot(distVector,distVector);float dist=sqrt(l);if(l>0.0){float angle=atan(distVector.y,distVector.x);float c=alpha*repulsion*centermass.b;float distanceMin2=1.0;if(l<distanceMin2)l=sqrt(distanceMin2*l);float addV=c/sqrt(l);add=addV*vec2(cos(angle),sin(angle));}}return add;}void main(){vec4 pointPosition=texture2D(position,index);vec4 random=texture2D(randomValues,index);vec4 velocity=vec4(0.0);velocity.xy+=calcAdd(pointPosition.xy/levelTextureSize,pointPosition.xy);velocity.xy+=velocity.xy*random.rg;gl_FragColor=velocity;}\"; // eslint-disable-line\n\nvar ForceManyBody = /*#__PURE__*/function (_CoreModule4) {\n  _inherits(ForceManyBody, _CoreModule4);\n\n  var _super4 = _createSuper(ForceManyBody);\n\n  function ForceManyBody() {\n    var _this5;\n\n    _classCallCheck(this, ForceManyBody);\n\n    _this5 = _super4.apply(this, arguments);\n    _this5.levelsFbos = new Map();\n    _this5.quadtreeLevels = 0;\n    return _this5;\n  }\n\n  _createClass(ForceManyBody, [{\n    key: \"create\",\n    value: function create() {\n      var _a;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store;\n      this.quadtreeLevels = Math.log2((_a = config.spaceSize) !== null && _a !== void 0 ? _a : defaultConfigValues.spaceSize);\n\n      for (var i = 0; i < this.quadtreeLevels; i += 1) {\n        var levelTextureSize = Math.pow(2, i + 1);\n        this.levelsFbos.set(\"level[\".concat(i, \"]\"), reglInstance.framebuffer({\n          shape: [levelTextureSize, levelTextureSize],\n          colorType: 'float',\n          depth: false,\n          stencil: false\n        }));\n      } // Create random number to prevent point to stick together in one coordinate\n\n\n      var randomValuesState = new Float32Array(store.pointsTextureSize * store.pointsTextureSize * 4);\n\n      for (var _i = 0; _i < store.pointsTextureSize * store.pointsTextureSize; ++_i) {\n        randomValuesState[_i * 4] = getRandomValue(-1, 1) * 0.00001;\n        randomValuesState[_i * 4 + 1] = getRandomValue(-1, 1) * 0.00001;\n      }\n\n      this.randomValuesFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: randomValuesState,\n          shape: [store.pointsTextureSize, store.pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _this6 = this;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          data = this.data,\n          points = this.points;\n      this.clearLevelsCommand = reglInstance({\n        frag: clearFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer(_, props) {\n          return props.levelFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        }\n      });\n      this.calculateLevelsCommand = reglInstance({\n        frag: calculateLevelFrag,\n        vert: calculateLevelVert,\n        framebuffer: function framebuffer(_, props) {\n          return props.levelFbo;\n        },\n        primitive: 'points',\n        count: function count() {\n          return data.nodes.length;\n        },\n        attributes: {\n          indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          pointsTextureSize: function pointsTextureSize() {\n            return store.pointsTextureSize;\n          },\n          levelTextureSize: function levelTextureSize(_, props) {\n            return props.levelTextureSize;\n          },\n          cellSize: function cellSize(_, props) {\n            return props.cellSize;\n          }\n        },\n        blend: {\n          enable: true,\n          func: {\n            src: 'one',\n            dst: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        },\n        stencil: {\n          enable: false\n        }\n      });\n      this.forceCommand = reglInstance({\n        frag: forceFrag$2,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          level: function level(_, props) {\n            return props.level;\n          },\n          levels: this.quadtreeLevels,\n          levelFbo: function levelFbo(_, props) {\n            return props.levelFbo;\n          },\n          levelTextureSize: function levelTextureSize(_, props) {\n            return props.levelTextureSize;\n          },\n          alpha: function alpha() {\n            return store.alpha;\n          },\n          repulsion: function repulsion() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          },\n          theta: function theta() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionTheta;\n          }\n        },\n        blend: {\n          enable: true,\n          func: {\n            src: 'one',\n            dst: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        },\n        stencil: {\n          enable: false\n        }\n      });\n      this.forceFromItsOwnCentermassCommand = reglInstance({\n        frag: forceCenterFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          randomValues: function randomValues() {\n            return _this6.randomValuesFbo;\n          },\n          levelFbo: function levelFbo(_, props) {\n            return props.levelFbo;\n          },\n          levelTextureSize: function levelTextureSize(_, props) {\n            return props.levelTextureSize;\n          },\n          alpha: function alpha() {\n            return store.alpha;\n          },\n          repulsion: function repulsion() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          }\n        },\n        blend: {\n          enable: true,\n          func: {\n            src: 'one',\n            dst: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        },\n        stencil: {\n          enable: false\n        }\n      });\n      this.clearVelocityCommand = reglInstance({\n        frag: clearFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _a, _b, _c, _d, _e, _f;\n\n      var config = this.config;\n\n      for (var i = 0; i < this.quadtreeLevels; i += 1) {\n        (_a = this.clearLevelsCommand) === null || _a === void 0 ? void 0 : _a.call(this, {\n          levelFbo: this.levelsFbos.get(\"level[\".concat(i, \"]\"))\n        });\n        var levelTextureSize = Math.pow(2, i + 1);\n        var cellSize = ((_b = config.spaceSize) !== null && _b !== void 0 ? _b : defaultConfigValues.spaceSize) / levelTextureSize;\n        (_c = this.calculateLevelsCommand) === null || _c === void 0 ? void 0 : _c.call(this, {\n          levelFbo: this.levelsFbos.get(\"level[\".concat(i, \"]\")),\n          levelTextureSize: levelTextureSize,\n          cellSize: cellSize\n        });\n      }\n\n      (_d = this.clearVelocityCommand) === null || _d === void 0 ? void 0 : _d.call(this);\n\n      for (var _i2 = 0; _i2 < this.quadtreeLevels; _i2 += 1) {\n        var _levelTextureSize = Math.pow(2, _i2 + 1);\n\n        (_e = this.forceCommand) === null || _e === void 0 ? void 0 : _e.call(this, {\n          levelFbo: this.levelsFbos.get(\"level[\".concat(_i2, \"]\")),\n          levelTextureSize: _levelTextureSize,\n          level: _i2\n        });\n\n        if (_i2 === this.quadtreeLevels - 1) {\n          (_f = this.forceFromItsOwnCentermassCommand) === null || _f === void 0 ? void 0 : _f.call(this, {\n            levelFbo: this.levelsFbos.get(\"level[\".concat(_i2, \"]\")),\n            levelTextureSize: _levelTextureSize,\n            level: _i2\n          });\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n\n      (_a = this.randomValuesFbo) === null || _a === void 0 ? void 0 : _a.destroy();\n      this.levelsFbos.forEach(function (fbo) {\n        var _a; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        if ((_a = fbo) === null || _a === void 0 ? void 0 : _a._framebuffer.framebuffer) {\n          fbo.destroy();\n        }\n      });\n      this.levelsFbos.clear();\n    }\n  }]);\n\n  return ForceManyBody;\n}(CoreModule);\n\nfunction forceFrag$1(startLevel, maxLevels) {\n  startLevel = Math.min(startLevel, maxLevels);\n  var delta = maxLevels - startLevel;\n  var calcAdd = \"\\n    float dist = sqrt(l);\\n    if (dist > 0.0) {\\n      float c = alpha * repulsion * centermass.b;\\n      addVelocity += calcAdd(vec2(x, y), l, c);\\n      addVelocity += addVelocity * random.rg;\\n    }\\n  \";\n\n  function quad(level) {\n    if (level >= maxLevels) {\n      return calcAdd;\n    } else {\n      var groupSize = Math.pow(2, level + 1);\n      var iEnding = new Array(level + 1 - delta).fill(0).map(function (_, l) {\n        return \"pow(2.0, \".concat(level - (l + delta), \".0) * i\").concat(l + delta);\n      }).join('+');\n      var jEnding = new Array(level + 1 - delta).fill(0).map(function (_, l) {\n        return \"pow(2.0, \".concat(level - (l + delta), \".0) * j\").concat(l + delta);\n      }).join('+');\n      return \"\\n      for (float ij\".concat(level, \" = 0.0; ij\").concat(level, \" < 4.0; ij\").concat(level, \" += 1.0) {\\n        float i\").concat(level, \" = 0.0;\\n        float j\").concat(level, \" = 0.0;\\n        if (ij\").concat(level, \" == 1.0 || ij\").concat(level, \" == 3.0) i\").concat(level, \" = 1.0;\\n        if (ij\").concat(level, \" == 2.0 || ij\").concat(level, \" == 3.0) j\").concat(level, \" = 1.0;\\n        float i = pow(2.0, \").concat(startLevel, \".0) * n / width\").concat(level + 1, \" + \").concat(iEnding, \";\\n        float j = pow(2.0, \").concat(startLevel, \".0) * m / width\").concat(level + 1, \" + \").concat(jEnding, \";\\n        float groupPosX = (i + 0.5) / \").concat(groupSize, \".0;\\n        float groupPosY = (j + 0.5) / \").concat(groupSize, \".0;\\n        \\n        vec4 centermass = texture2D(level[\").concat(level, \"], vec2(groupPosX, groupPosY));\\n        if (centermass.r > 0.0 && centermass.g > 0.0 && centermass.b > 0.0) {\\n          float x = centermass.r / centermass.b - pointPosition.r;\\n          float y = centermass.g / centermass.b - pointPosition.g;\\n          float l = x * x + y * y;\\n          if ((width\").concat(level + 1, \" * width\").concat(level + 1, \") / theta < l) {\\n            \").concat(calcAdd, \"\\n          } else {\\n            \").concat(quad(level + 1), \"\\n          }\\n        }\\n      }\\n      \");\n    }\n  }\n\n  return \"\\n#ifdef GL_ES\\nprecision highp float;\\n#endif\\n\\nuniform sampler2D position;\\nuniform sampler2D randomValues;\\nuniform float spaceSize;\\nuniform float repulsion;\\nuniform float theta;\\nuniform float alpha;\\nuniform sampler2D level[\".concat(maxLevels, \"];\\nvarying vec2 index;\\n\\nvec2 calcAdd(vec2 xy, float l, float c) {\\n  float distanceMin2 = 1.0;\\n  if (l < distanceMin2) l = sqrt(distanceMin2 * l);\\n  float add = c / l;\\n  return add * xy;\\n}\\n\\nvoid main() {\\n  vec4 pointPosition = texture2D(position, index);\\n  vec4 random = texture2D(randomValues, index);\\n\\n  float width0 = spaceSize;\\n\\n  vec2 velocity = vec2(0.0);\\n  vec2 addVelocity = vec2(0.0);\\n\\n  \").concat(new Array(maxLevels).fill(0).map(function (_, i) {\n    return \"float width\".concat(i + 1, \" = width\").concat(i, \" / 2.0;\");\n  }).join('\\n'), \"\\n\\n  for (float n = 0.0; n < pow(2.0, \").concat(delta, \".0); n += 1.0) {\\n    for (float m = 0.0; m < pow(2.0, \").concat(delta, \".0); m += 1.0) {\\n      \").concat(quad(delta), \"\\n    }\\n  }\\n\\n  velocity -= addVelocity;\\n\\n  gl_FragColor = vec4(velocity, 0.0, 0.0);\\n}\\n\");\n}\n\nvar ForceManyBodyQuadtree = /*#__PURE__*/function (_CoreModule5) {\n  _inherits(ForceManyBodyQuadtree, _CoreModule5);\n\n  var _super5 = _createSuper(ForceManyBodyQuadtree);\n\n  function ForceManyBodyQuadtree() {\n    var _this7;\n\n    _classCallCheck(this, ForceManyBodyQuadtree);\n\n    _this7 = _super5.apply(this, arguments);\n    _this7.levelsFbos = new Map();\n    _this7.quadtreeLevels = 0;\n    return _this7;\n  }\n\n  _createClass(ForceManyBodyQuadtree, [{\n    key: \"create\",\n    value: function create() {\n      var _a;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store;\n      this.quadtreeLevels = Math.log2((_a = config.spaceSize) !== null && _a !== void 0 ? _a : defaultConfigValues.spaceSize);\n\n      for (var i = 0; i < this.quadtreeLevels; i += 1) {\n        var levelTextureSize = Math.pow(2, i + 1);\n        this.levelsFbos.set(\"level[\".concat(i, \"]\"), reglInstance.framebuffer({\n          color: reglInstance.texture({\n            data: new Float32Array(levelTextureSize * levelTextureSize * 4),\n            shape: [levelTextureSize, levelTextureSize, 4],\n            type: 'float'\n          }),\n          depth: false,\n          stencil: false\n        }));\n      } // Create random number to prevent point to stick together in one coordinate\n\n\n      var randomValuesState = new Float32Array(store.pointsTextureSize * store.pointsTextureSize * 4);\n\n      for (var _i3 = 0; _i3 < store.pointsTextureSize * store.pointsTextureSize; ++_i3) {\n        randomValuesState[_i3 * 4] = getRandomValue(-1, 1) * 0.00001;\n        randomValuesState[_i3 * 4 + 1] = getRandomValue(-1, 1) * 0.00001;\n      }\n\n      this.randomValuesFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: randomValuesState,\n          shape: [store.pointsTextureSize, store.pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _this8 = this;\n\n      var _a, _b;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          data = this.data,\n          points = this.points;\n      this.clearLevelsCommand = reglInstance({\n        frag: clearFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer(_, props) {\n          return props.levelFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        }\n      });\n      this.calculateLevelsCommand = reglInstance({\n        frag: calculateLevelFrag,\n        vert: calculateLevelVert,\n        framebuffer: function framebuffer(_, props) {\n          return props.levelFbo;\n        },\n        primitive: 'points',\n        count: function count() {\n          return data.nodes.length;\n        },\n        attributes: {\n          indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          pointsTextureSize: function pointsTextureSize() {\n            return store.pointsTextureSize;\n          },\n          levelTextureSize: function levelTextureSize(_, props) {\n            return props.levelTextureSize;\n          },\n          cellSize: function cellSize(_, props) {\n            return props.cellSize;\n          }\n        },\n        blend: {\n          enable: true,\n          func: {\n            src: 'one',\n            dst: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        },\n        stencil: {\n          enable: false\n        }\n      });\n      this.quadtreeCommand = reglInstance({\n        frag: forceFrag$1((_b = (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionQuadtreeLevels) !== null && _b !== void 0 ? _b : this.quadtreeLevels, this.quadtreeLevels),\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: _objectSpread({\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          randomValues: function randomValues() {\n            return _this8.randomValuesFbo;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          },\n          repulsion: function repulsion() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsion;\n          },\n          theta: function theta() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionTheta;\n          },\n          alpha: function alpha() {\n            return store.alpha;\n          }\n        }, Object.fromEntries(this.levelsFbos))\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _a, _b, _c, _d;\n\n      var config = this.config;\n\n      for (var i = 0; i < this.quadtreeLevels; i += 1) {\n        (_a = this.clearLevelsCommand) === null || _a === void 0 ? void 0 : _a.call(this, {\n          levelFbo: this.levelsFbos.get(\"level[\".concat(i, \"]\"))\n        });\n        var levelTextureSize = Math.pow(2, i + 1);\n        var cellSize = ((_b = config.spaceSize) !== null && _b !== void 0 ? _b : defaultConfigValues.spaceSize) / levelTextureSize;\n        (_c = this.calculateLevelsCommand) === null || _c === void 0 ? void 0 : _c.call(this, {\n          levelFbo: this.levelsFbos.get(\"level[\".concat(i, \"]\")),\n          levelTextureSize: levelTextureSize,\n          cellSize: cellSize\n        });\n      }\n\n      (_d = this.quadtreeCommand) === null || _d === void 0 ? void 0 : _d.call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n\n      (_a = this.randomValuesFbo) === null || _a === void 0 ? void 0 : _a.destroy();\n      this.levelsFbos.forEach(function (fbo) {\n        var _a; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        if ((_a = fbo) === null || _a === void 0 ? void 0 : _a._framebuffer.framebuffer) {\n          fbo.destroy();\n        }\n      });\n      this.levelsFbos.clear();\n    }\n  }]);\n\n  return ForceManyBodyQuadtree;\n}(CoreModule);\n\nvar forceFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform float repulsion;uniform vec2 mousePos;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 velocity=vec4(0.0);vec2 mouse=mousePos;vec2 distVector=mouse-pointPosition.rg;float dist=sqrt(dot(distVector,distVector));dist=max(dist,10.0);float angle=atan(distVector.y,distVector.x);float addV=100.0*repulsion/(dist*dist);velocity.rg-=addV*vec2(cos(angle),sin(angle));gl_FragColor=velocity;}\"; // eslint-disable-line\n\nvar ForceMouse = /*#__PURE__*/function (_CoreModule6) {\n  _inherits(ForceMouse, _CoreModule6);\n\n  var _super6 = _createSuper(ForceMouse);\n\n  function ForceMouse() {\n    _classCallCheck(this, ForceMouse);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(ForceMouse, [{\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          points = this.points;\n      this.runCommand = reglInstance({\n        frag: forceFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return points === null || points === void 0 ? void 0 : points.velocityFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return points === null || points === void 0 ? void 0 : points.previousPositionFbo;\n          },\n          mousePos: function mousePos() {\n            return store.mousePosition;\n          },\n          repulsion: function repulsion() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.repulsionFromMouse;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _a;\n\n      (_a = this.runCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }]);\n\n  return ForceMouse;\n}(CoreModule);\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar glBench = {\n  exports: {}\n};\n\n(function (module, exports) {\n  (function (global, factory) {\n    module.exports = factory();\n  })(commonjsGlobal, function () {\n    var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n    var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n    var GLBench = /*#__PURE__*/function () {\n      /** GLBench constructor\n       * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n       * @param { Object | undefined } settings additional settings\n       */\n      function GLBench(gl) {\n        var _this9 = this;\n\n        var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        _classCallCheck(this, GLBench);\n\n        this.css = UICSS;\n        this.svg = UISVG;\n\n        this.paramLogger = function () {};\n\n        this.chartLogger = function () {};\n\n        this.chartLen = 20;\n        this.chartHz = 20;\n        this.names = [];\n        this.cpuAccums = [];\n        this.gpuAccums = [];\n        this.activeAccums = [];\n        this.chart = new Array(this.chartLen);\n\n        this.now = function () {\n          return performance && performance.now ? performance.now() : Date.now();\n        };\n\n        this.updateUI = function () {\n          [].forEach.call(_this9.nodes['gl-gpu-svg'], function (node) {\n            node.style.display = _this9.trackGPU ? 'inline' : 'none';\n          });\n        };\n\n        Object.assign(this, settings);\n        this.detected = 0;\n        this.finished = [];\n        this.isFramebuffer = 0;\n        this.frameId = 0; // 120hz device detection\n\n        var rafId,\n            n = 0,\n            t0;\n\n        var loop = function loop(t) {\n          if (++n < 20) {\n            rafId = requestAnimationFrame(loop);\n          } else {\n            _this9.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n            cancelAnimationFrame(rafId);\n          }\n\n          if (!t0) t0 = t;\n        };\n\n        requestAnimationFrame(loop); // attach gpu profilers\n\n        if (gl) {\n          var glFinish = /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t, activeAccums) {\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.abrupt(\"return\", Promise.resolve(setTimeout(function () {\n                        gl.getError();\n                        var dt = _this9.now() - t;\n                        activeAccums.forEach(function (active, i) {\n                          if (active) _this9.gpuAccums[i] += dt;\n                        });\n                      }, 0)));\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function glFinish(_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }();\n\n          var addProfiler = function addProfiler(fn, self, target) {\n            return function () {\n              var t = self.now();\n              fn.apply(target, arguments);\n              if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n            };\n          };\n\n          ['drawArrays', 'drawElements', 'drawArraysInstanced', 'drawBuffers', 'drawElementsInstanced', 'drawRangeElements'].forEach(function (fn) {\n            if (gl[fn]) gl[fn] = addProfiler(gl[fn], _this9, gl);\n          });\n\n          gl.getExtension = function (fn, self) {\n            return function () {\n              var ext = fn.apply(gl, arguments);\n\n              if (ext) {\n                ['drawElementsInstancedANGLE', 'drawBuffersWEBGL'].forEach(function (fn) {\n                  if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext);\n                });\n              }\n\n              return ext;\n            };\n          }(gl.getExtension, this);\n        } // init ui and ui loggers\n\n\n        if (!this.withoutUI) {\n          if (!this.dom) this.dom = document.body;\n          var elm = document.createElement('div');\n          elm.id = 'gl-bench';\n          this.dom.appendChild(elm);\n          this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n          this.dom = elm;\n          this.dom.addEventListener('click', function () {\n            _this9.trackGPU = !_this9.trackGPU;\n\n            _this9.updateUI();\n          });\n\n          this.paramLogger = function (logger, dom, names) {\n            var classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n            var nodes = Object.assign({}, classes);\n            classes.forEach(function (c) {\n              return nodes[c] = dom.getElementsByClassName(c);\n            });\n            _this9.nodes = nodes;\n            return function (i, cpu, gpu, mem, fps, totalTime, frameId) {\n              nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n              nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n              nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '';\n              nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n              logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n            };\n          }(this.paramLogger, this.dom, this.names);\n\n          this.chartLogger = function (logger, dom) {\n            var nodes = {\n              'gl-chart': dom.getElementsByClassName('gl-chart')\n            };\n            return function (i, chart, circularId) {\n              var points = '';\n              var len = chart.length;\n\n              for (var _i4 = 0; _i4 < len; _i4++) {\n                var id = (circularId + _i4 + 1) % len;\n\n                if (chart[id] != undefined) {\n                  points = points + ' ' + (55 * _i4 / (len - 1)).toFixed(1) + ',' + (45 - chart[id] * 22 / 60 / _this9.detected).toFixed(1);\n                }\n              }\n\n              nodes['gl-chart'][i].setAttribute('points', points);\n              logger(_this9.names[i], chart, circularId);\n            };\n          }(this.chartLogger, this.dom);\n        }\n      }\n      /**\n       * Explicit UI add\n       * @param { string | undefined } name \n       */\n\n\n      _createClass(GLBench, [{\n        key: \"addUI\",\n        value: function addUI(name) {\n          if (this.names.indexOf(name) == -1) {\n            this.names.push(name);\n\n            if (this.dom) {\n              this.dom.insertAdjacentHTML('beforeend', this.svg);\n              this.updateUI();\n            }\n\n            this.cpuAccums.push(0);\n            this.gpuAccums.push(0);\n            this.activeAccums.push(false);\n          }\n        }\n        /**\n         * Increase frameID\n         * @param { number | undefined } now\n         */\n\n      }, {\n        key: \"nextFrame\",\n        value: function nextFrame(now) {\n          var _this10 = this;\n\n          this.frameId++;\n          var t = now ? now : this.now(); // params\n\n          if (this.frameId <= 1) {\n            this.paramFrame = this.frameId;\n            this.paramTime = t;\n          } else {\n            var duration = t - this.paramTime;\n\n            if (duration >= 1e3) {\n              var frameCount = this.frameId - this.paramFrame;\n              var fps = frameCount / duration * 1e3;\n\n              var _loop = function _loop(i) {\n                var cpu = _this10.cpuAccums[i] / duration * 100,\n                    gpu = _this10.gpuAccums[i] / duration * 100,\n                    mem = performance && performance.memory ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n\n                _this10.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n\n                _this10.cpuAccums[i] = 0;\n                Promise.all(_this10.finished).then(function () {\n                  _this10.gpuAccums[i] = 0;\n                  _this10.finished = [];\n                });\n              };\n\n              for (var i = 0; i < this.names.length; i++) {\n                _loop(i);\n              }\n\n              this.paramFrame = this.frameId;\n              this.paramTime = t;\n            }\n          } // chart\n\n\n          if (!this.detected || !this.chartFrame) {\n            this.chartFrame = this.frameId;\n            this.chartTime = t;\n            this.circularId = 0;\n          } else {\n            var timespan = t - this.chartTime;\n            var hz = this.chartHz * timespan / 1e3;\n\n            while (--hz > 0 && this.detected) {\n              var _frameCount = this.frameId - this.chartFrame;\n\n              var _fps = _frameCount / timespan * 1e3;\n\n              this.chart[this.circularId % this.chartLen] = _fps;\n\n              for (var _i5 = 0; _i5 < this.names.length; _i5++) {\n                this.chartLogger(_i5, this.chart, this.circularId);\n              }\n\n              this.circularId++;\n              this.chartFrame = this.frameId;\n              this.chartTime = t;\n            }\n          }\n        }\n        /**\n         * Begin named measurement\n         * @param { string | undefined } name\n         */\n\n      }, {\n        key: \"begin\",\n        value: function begin(name) {\n          this.updateAccums(name);\n        }\n        /**\n         * End named measure\n         * @param { string | undefined } name\n         */\n\n      }, {\n        key: \"end\",\n        value: function end(name) {\n          this.updateAccums(name);\n        }\n      }, {\n        key: \"updateAccums\",\n        value: function updateAccums(name) {\n          var nameId = this.names.indexOf(name);\n\n          if (nameId == -1) {\n            nameId = this.names.length;\n            this.addUI(name);\n          }\n\n          var t = this.now();\n          var dt = t - this.t0;\n\n          for (var i = 0; i < nameId + 1; i++) {\n            if (this.activeAccums[i]) {\n              this.cpuAccums[i] += dt;\n            }\n          }\n\n          this.activeAccums[nameId] = !this.activeAccums[nameId];\n          this.t0 = t;\n        }\n      }]);\n\n      return GLBench;\n    }();\n\n    return GLBench;\n  });\n})(glBench);\n\nvar GLBench = glBench.exports;\nvar benchCSS = \"\\n  #gl-bench {\\n    position:absolute;\\n    right:0;\\n    top:0;\\n    z-index:1000;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  #gl-bench div {\\n    position: relative;\\n    display: block;\\n    margin: 4px;\\n    padding: 0 7px 0 10px;\\n    background: #5f69de;\\n    border-radius: 15px;\\n    cursor: pointer;\\n    opacity: 0.9;\\n  }\\n  #gl-bench svg {\\n    height: 60px;\\n    margin: 0 -1px;\\n  }\\n  #gl-bench text {\\n    font-size: 12px;\\n    font-family: Helvetica,Arial,sans-serif;\\n    font-weight: 700;\\n    dominant-baseline: middle;\\n    text-anchor: middle;\\n  }\\n  #gl-bench .gl-mem {\\n    font-size: 9px;\\n  }\\n  #gl-bench line {\\n    stroke-width: 5;\\n    stroke: #112211;\\n    stroke-linecap: round;\\n  }\\n  #gl-bench polyline {\\n    fill: none;\\n    stroke: #112211;\\n    stroke-linecap: round;\\n    stroke-linejoin: round;\\n    stroke-width: 3.5;\\n  }\\n  #gl-bench rect {\\n    fill: #8288e4;\\n  }\\n  #gl-bench .opacity {\\n    stroke: #8288e4;\\n  }\\n\";\n\nvar FPSMonitor = /*#__PURE__*/function () {\n  function FPSMonitor(canvas) {\n    _classCallCheck(this, FPSMonitor);\n\n    this.destroy();\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    this.bench = new GLBench(gl, {\n      css: benchCSS\n    });\n  }\n\n  _createClass(FPSMonitor, [{\n    key: \"begin\",\n    value: function begin() {\n      var _a;\n\n      (_a = this.bench) === null || _a === void 0 ? void 0 : _a.begin('frame');\n    }\n  }, {\n    key: \"end\",\n    value: function end(now) {\n      var _a, _b;\n\n      (_a = this.bench) === null || _a === void 0 ? void 0 : _a.end('frame');\n      (_b = this.bench) === null || _b === void 0 ? void 0 : _b.nextFrame(now);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.bench = undefined;\n      (0, _d3Selection.select)('#gl-bench').remove();\n    }\n  }]);\n\n  return FPSMonitor;\n}();\n\nvar GraphData = /*#__PURE__*/function () {\n  function GraphData() {\n    _classCallCheck(this, GraphData);\n\n    this._nodes = [];\n    this._links = [];\n  }\n\n  _createClass(GraphData, [{\n    key: \"setData\",\n    value: function setData(inputNodes, inputLinks) {\n      var nodes = inputNodes.map(function (n, i) {\n        return _objectSpread(_objectSpread({}, n), {}, {\n          degree: 0,\n          indegree: 0,\n          outdegree: 0,\n          index: i\n        });\n      });\n      var nodesObj = {};\n      nodes.forEach(function (n) {\n        nodesObj[n.id] = n;\n      }); // Calculate node outdegree/indegree value\n\n      inputLinks.forEach(function (l) {\n        var sourceNode = nodesObj[l.source];\n        var targetNode = nodesObj[l.target];\n\n        if (sourceNode !== undefined && targetNode !== undefined) {\n          sourceNode.outdegree += 1;\n          targetNode.indegree += 1;\n        }\n      }); // Calculate node degree value\n\n      nodes.forEach(function (n) {\n        var _a, _b;\n\n        if (!n.degree) n.degree = ((_a = n.outdegree) !== null && _a !== void 0 ? _a : 0) + ((_b = n.indegree) !== null && _b !== void 0 ? _b : 0);\n      }); // Sort nodes by degree value\n\n      nodes.sort(function (a, b) {\n        var _a;\n\n        return a.degree - ((_a = b.degree) !== null && _a !== void 0 ? _a : 0);\n      }); // Put index to node by ascending from 0\n\n      nodes.forEach(function (n, i) {\n        n.index = i;\n      });\n      var links = inputLinks.map(function (l) {\n        var sourceNode = nodesObj[l.source];\n        var targetNode = nodesObj[l.target];\n\n        if (sourceNode !== undefined && targetNode !== undefined) {\n          return _objectSpread(_objectSpread({}, l), {}, {\n            from: sourceNode.index,\n            to: targetNode.index,\n            source: sourceNode,\n            target: targetNode\n          });\n        } else {\n          return undefined;\n        }\n      }).filter(function (l) {\n        return l !== undefined;\n      });\n      this._nodes = nodes;\n      this._links = links;\n    }\n  }, {\n    key: \"nodes\",\n    get: function get() {\n      return this._nodes;\n    }\n  }, {\n    key: \"links\",\n    get: function get() {\n      return this._links;\n    }\n  }, {\n    key: \"findNodeById\",\n    value: function findNodeById(id) {\n      return this.nodes.find(function (node) {\n        return node.id.toLowerCase() === id.toLowerCase();\n      });\n    }\n  }]);\n\n  return GraphData;\n}();\n\nvar drawStraightFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform bool useArrow;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}void main(){float opacity=1.0;vec3 color=rgbaColor.rgb;float smoothDelta=smoothWidthRatio/2.0;if(useArrow){float end_arrow=0.5+arrowLength/2.0;float start_arrow=end_arrow-arrowLength;float arrowWidthDelta=linkWidthArrowWidthRatio/2.0;float linkOpacity=rgbaColor.a*smoothstep(0.5-arrowWidthDelta,0.5-arrowWidthDelta-smoothDelta,abs(pos.y));float arrowOpacity=1.0;if(pos.x>start_arrow&&pos.x<start_arrow+arrowLength){float xmapped=map(pos.x,start_arrow,end_arrow,0.0,1.0);arrowOpacity=rgbaColor.a*smoothstep(xmapped-smoothDelta,xmapped,map(abs(pos.y),0.5,0.0,0.0,1.0));if(linkOpacity!=arrowOpacity){linkOpacity+=arrowOpacity;}}opacity=linkOpacity;}else opacity=rgbaColor.a*smoothstep(0.5,0.5-smoothDelta,abs(pos.y));gl_FragColor=vec4(color,opacity);}\"; // eslint-disable-line\n\nvar drawStraightVert = \"precision highp float;\\n#define GLSLIFY 1\\nattribute vec2 position,pointA,pointB;attribute vec4 color;attribute float width;uniform sampler2D positions;uniform sampler2D particleSize;uniform mat3 transform;uniform float pointsTextureSize;uniform float widthScale;uniform float nodeSizeScale;uniform bool useArrow;uniform float arrowSizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform vec2 linkVisibilityDistanceRange;uniform float linkVisibilityMinTransparency;varying vec4 rgbaColor;varying vec2 pos;varying float arrowLength;varying float linkWidthArrowWidthRatio;varying float smoothWidthRatio;varying float targetPointSize;float map(float value,float min1,float max1,float min2,float max2){return min2+(value-min1)*(max2-min2)/(max1-min1);}float pointSize(float size){return size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}void main(){pos=position;targetPointSize=pointSize(texture2D(particleSize,(pointB+0.5)/pointsTextureSize).r*nodeSizeScale);vec4 pointPositionA=texture2D(positions,(pointA+0.5)/pointsTextureSize);vec4 pointPositionB=texture2D(positions,(pointB+0.5)/pointsTextureSize);vec2 a=pointPositionA.xy;vec2 b=pointPositionB.xy;vec2 xBasis=b-a;vec2 yBasis=normalize(vec2(-xBasis.y,xBasis.x));vec2 distVector=a-b;float linkDist=sqrt(dot(distVector,distVector));float linkDistPx=linkDist*transform[0][0];targetPointSize=(targetPointSize/(2.0*ratio))/linkDistPx;float linkWidth=width*widthScale;float k=2.0;float arrowWidth=max(5.0,linkWidth*k);arrowWidth*=arrowSizeScale;float arrowWidthPx=arrowWidth/transform[0][0];arrowLength=min(0.3,(0.866*arrowWidthPx*2.0)/linkDist);float smoothWidth=2.0;float arrowExtraWidth=arrowWidth-linkWidth;linkWidth+=smoothWidth/2.0;if(useArrow){linkWidth+=arrowExtraWidth;}smoothWidthRatio=smoothWidth/linkWidth;linkWidthArrowWidthRatio=arrowExtraWidth/linkWidth;float linkWidthPx=linkWidth/transform[0][0];vec3 rgbColor=color.rgb;float opacity=color.a*max(linkVisibilityMinTransparency,map(linkDistPx,linkVisibilityDistanceRange.g,linkVisibilityDistanceRange.r,0.0,1.0));rgbaColor=vec4(rgbColor,opacity);vec2 point=a+xBasis*position.x+yBasis*linkWidthPx*position.y;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);}\"; // eslint-disable-line\n\nvar Lines = /*#__PURE__*/function (_CoreModule7) {\n  _inherits(Lines, _CoreModule7);\n\n  var _super7 = _createSuper(Lines);\n\n  function Lines() {\n    _classCallCheck(this, Lines);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(Lines, [{\n    key: \"create\",\n    value: function create() {\n      this.updateColor();\n      this.updateWidth();\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _this11 = this;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          data = this.data,\n          points = this.points;\n      var pointsTextureSize = store.pointsTextureSize;\n      var geometryLinkBuffer = {\n        buffer: reglInstance.buffer([[0, -0.5], [1, -0.5], [1, 0.5], [0, -0.5], [1, 0.5], [0, 0.5]]),\n        divisor: 0\n      };\n      var instancePoints = [];\n      data.links.forEach(function (l) {\n        var fromX = l.from % pointsTextureSize;\n        var fromY = Math.floor(l.from / pointsTextureSize);\n        var toX = l.to % pointsTextureSize;\n        var toY = Math.floor(l.to / pointsTextureSize);\n        instancePoints.push([fromX, fromY]);\n        instancePoints.push([toX, toY]);\n      });\n      var pointsBuffer = reglInstance.buffer(instancePoints);\n      this.drawStraightCommand = reglInstance({\n        vert: drawStraightVert,\n        frag: drawStraightFrag,\n        attributes: {\n          position: geometryLinkBuffer,\n          pointA: {\n            buffer: function buffer() {\n              return pointsBuffer;\n            },\n            divisor: 1,\n            offset: Float32Array.BYTES_PER_ELEMENT * 0,\n            stride: Float32Array.BYTES_PER_ELEMENT * 4\n          },\n          pointB: {\n            buffer: function buffer() {\n              return pointsBuffer;\n            },\n            divisor: 1,\n            offset: Float32Array.BYTES_PER_ELEMENT * 2,\n            stride: Float32Array.BYTES_PER_ELEMENT * 4\n          },\n          color: {\n            buffer: function buffer() {\n              return _this11.colorBuffer;\n            },\n            divisor: 1,\n            offset: Float32Array.BYTES_PER_ELEMENT * 0,\n            stride: Float32Array.BYTES_PER_ELEMENT * 4\n          },\n          width: {\n            buffer: function buffer() {\n              return _this11.widthBuffer;\n            },\n            divisor: 1,\n            offset: Float32Array.BYTES_PER_ELEMENT * 0,\n            stride: Float32Array.BYTES_PER_ELEMENT * 1\n          }\n        },\n        uniforms: {\n          positions: function positions() {\n            return points === null || points === void 0 ? void 0 : points.currentPositionFbo;\n          },\n          particleSize: function particleSize() {\n            return points === null || points === void 0 ? void 0 : points.sizeFbo;\n          },\n          transform: function transform() {\n            return store.transform;\n          },\n          pointsTextureSize: function pointsTextureSize() {\n            return store.pointsTextureSize;\n          },\n          nodeSizeScale: function nodeSizeScale() {\n            return config.nodeSizeScale;\n          },\n          widthScale: function widthScale() {\n            return config.linkWidthScale;\n          },\n          useArrow: function useArrow() {\n            return config.linkArrows;\n          },\n          arrowSizeScale: function arrowSizeScale() {\n            return config.linkArrowsSizeScale;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          },\n          screenSize: function screenSize() {\n            return store.screenSize;\n          },\n          ratio: function ratio() {\n            return config.pixelRatio;\n          },\n          linkVisibilityDistanceRange: function linkVisibilityDistanceRange() {\n            return config.linkVisibilityDistanceRange;\n          },\n          linkVisibilityMinTransparency: function linkVisibilityMinTransparency() {\n            return config.linkVisibilityMinTransparency;\n          }\n        },\n        cull: {\n          enable: true,\n          face: 'back'\n        },\n        blend: {\n          enable: true,\n          func: {\n            dstRGB: 'one minus src alpha',\n            srcRGB: 'src alpha',\n            dstAlpha: 'one minus src alpha',\n            srcAlpha: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        },\n        count: 6,\n        instances: function instances() {\n          return data.links.length;\n        }\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _a;\n\n      if (!this.colorBuffer || !this.widthBuffer) return;\n      (_a = this.drawStraightCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          links = this.data.links;\n      var instancePoints = [];\n      links.forEach(function (l) {\n        var _a;\n\n        var c = (_a = getValue(l, config.linkColor)) !== null && _a !== void 0 ? _a : defaultLinkColor;\n        var rgba = getRgbaColor(c);\n        instancePoints.push(rgba);\n      });\n      this.colorBuffer = reglInstance.buffer(instancePoints);\n    }\n  }, {\n    key: \"updateWidth\",\n    value: function updateWidth() {\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          links = this.data.links;\n      var instancePoints = [];\n      links.forEach(function (l) {\n        var linkWidth = getValue(l, config.linkWidth);\n        instancePoints.push([linkWidth !== null && linkWidth !== void 0 ? linkWidth : defaultLinkWidth]);\n      });\n      this.widthBuffer = reglInstance.buffer(instancePoints);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b;\n\n      (_a = this.colorBuffer) === null || _a === void 0 ? void 0 : _a.destroy();\n      (_b = this.widthBuffer) === null || _b === void 0 ? void 0 : _b.destroy();\n    }\n  }]);\n\n  return Lines;\n}(CoreModule);\n\nfunction createColorBuffer(nodes, reglInstance, textureSize, colorAccessor) {\n  var _a;\n\n  var initialState = new Float32Array(textureSize * textureSize * 4);\n\n  var _iterator = _createForOfIteratorHelper(nodes.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          node = _step$value[1];\n\n      var c = (_a = getValue(node, colorAccessor)) !== null && _a !== void 0 ? _a : defaultNodeColor;\n      var rgba = getRgbaColor(c);\n      initialState[i * 4 + 0] = rgba[0];\n      initialState[i * 4 + 1] = rgba[1];\n      initialState[i * 4 + 2] = rgba[2];\n      initialState[i * 4 + 3] = rgba[3];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var initialTexture = reglInstance.texture({\n    data: initialState,\n    width: textureSize,\n    height: textureSize,\n    type: 'float'\n  });\n  return reglInstance.framebuffer({\n    color: initialTexture,\n    depth: false,\n    stencil: false\n  });\n}\n\nvar drawPointsFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nvarying vec2 index;varying vec3 rgbColor;varying float alpha;const float smoothing=0.9;void main(){if(alpha==0.0){discard;}float r=0.0;float delta=0.0;vec2 cxy=2.0*gl_PointCoord-1.0;r=dot(cxy,cxy);float opacity=alpha*(1.0-smoothstep(smoothing,1.0,r));gl_FragColor=vec4(rgbColor,opacity);}\"; // eslint-disable-line\n\nvar drawPointsVert = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nattribute vec2 indexes;uniform sampler2D positions;uniform sampler2D particleColor;uniform sampler2D particleSize;uniform float ratio;uniform mat3 transform;uniform float pointsTextureSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;varying vec2 index;varying vec3 rgbColor;varying float alpha;float pointSize(float size){return size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}void main(){index=indexes;vec4 pointPosition=texture2D(positions,(index+0.5)/pointsTextureSize);vec2 point=pointPosition.rg;vec2 p=2.0*point/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);gl_Position=vec4(final.rg,0,1);vec4 pSize=texture2D(particleSize,(index+0.5)/pointsTextureSize);float size=pSize.r*sizeScale;vec4 pColor=texture2D(particleColor,(index+0.5)/pointsTextureSize);rgbColor=pColor.rgb;gl_PointSize=pointSize(size);alpha=pColor.a;}\"; // eslint-disable-line\n\nvar findPointFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D particleSize;uniform float sizeScale;uniform float spaceSize;uniform vec2 screenSize;uniform float ratio;uniform mat3 transform;uniform vec2 selection[2];uniform bool isClick;varying vec2 index;float pointSize(float size){return size*ratio*min(5.0,max(1.0,transform[0][0]*0.01));}void main(){vec4 pointPosition=texture2D(position,index);vec2 p=2.0*pointPosition.rg/spaceSize-1.0;p*=spaceSize/screenSize;vec3 final=transform*vec3(p,1);vec4 pSize=texture2D(particleSize,index);float size=pSize.r*sizeScale;float left=2.0*(selection[0].x-0.5*pointSize(size))/screenSize.x-1.0;float right=2.0*(selection[1].x+0.5*pointSize(size))/screenSize.x-1.0;float top=2.0*(selection[0].y-0.5*pointSize(size))/screenSize.y-1.0;float bottom=2.0*(selection[1].y+0.5*pointSize(size))/screenSize.y-1.0;if(final.x>=left&&final.x<=right&&final.y>=top&&final.y<=bottom){gl_FragColor=vec4(1.0,isClick ? 1.0 : 0.0,1.0,1.0);}else{gl_FragColor=vec4(0.0);}}\"; // eslint-disable-line\n\nfunction createSizeBuffer(nodes, reglInstance, pointTextureSize, sizeAccessor) {\n  var numParticles = nodes.length;\n  var initialState = new Float32Array(pointTextureSize * pointTextureSize * 4);\n\n  for (var i = 0; i < numParticles; ++i) {\n    var node = nodes[i];\n\n    if (node) {\n      var size = getValue(node, sizeAccessor);\n      initialState[i * 4] = size !== null && size !== void 0 ? size : defaultNodeSize;\n    }\n  }\n\n  var initialTexture = reglInstance.texture({\n    data: initialState,\n    width: pointTextureSize,\n    height: pointTextureSize,\n    type: 'float'\n  });\n  return reglInstance.framebuffer({\n    color: initialTexture,\n    depth: false,\n    stencil: false\n  });\n}\n\nvar updatePositionFrag = \"#ifdef GL_ES\\nprecision highp float;\\n#define GLSLIFY 1\\n#endif\\nuniform sampler2D position;uniform sampler2D velocity;uniform float friction;uniform float spaceSize;varying vec2 index;void main(){vec4 pointPosition=texture2D(position,index);vec4 pointVelocity=texture2D(velocity,index);pointVelocity.rg*=friction;pointPosition.rg+=pointVelocity.rg;pointPosition.r=clamp(pointPosition.r,0.0,spaceSize);pointPosition.g=clamp(pointPosition.g,0.0,spaceSize);gl_FragColor=pointPosition;}\"; // eslint-disable-line\n\nvar Points = /*#__PURE__*/function (_CoreModule8) {\n  _inherits(Points, _CoreModule8);\n\n  var _super8 = _createSuper(Points);\n\n  function Points() {\n    _classCallCheck(this, Points);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(Points, [{\n    key: \"create\",\n    value: function create() {\n      var _a, _b;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          nodes = this.data.nodes;\n      var spaceSize = config.spaceSize;\n      var pointsTextureSize = store.pointsTextureSize;\n      var numParticles = nodes.length;\n      var initialState = new Float32Array(pointsTextureSize * pointsTextureSize * 4);\n\n      for (var i = 0; i < numParticles; ++i) {\n        var node = nodes[i];\n        initialState[i * 4 + 0] = (_a = node === null || node === void 0 ? void 0 : node.x) !== null && _a !== void 0 ? _a : (spaceSize !== null && spaceSize !== void 0 ? spaceSize : defaultConfigValues.spaceSize) * (Math.random() * (0.505 - 0.495) + 0.495);\n        initialState[i * 4 + 1] = (_b = node === null || node === void 0 ? void 0 : node.y) !== null && _b !== void 0 ? _b : (spaceSize !== null && spaceSize !== void 0 ? spaceSize : defaultConfigValues.spaceSize) * (Math.random() * (0.505 - 0.495) + 0.495);\n      } // Create position buffer\n\n\n      this.currentPositionFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: initialState,\n          shape: [pointsTextureSize, pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n      this.previousPositionFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: initialState,\n          shape: [pointsTextureSize, pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      }); // Create velocity buffer\n\n      this.velocityFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: new Float32Array(pointsTextureSize * pointsTextureSize * 4).fill(0),\n          shape: [pointsTextureSize, pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      }); // Create selected points buffer\n\n      this.selectedFbo = reglInstance.framebuffer({\n        color: reglInstance.texture({\n          data: initialState,\n          shape: [pointsTextureSize, pointsTextureSize, 4],\n          type: 'float'\n        }),\n        depth: false,\n        stencil: false\n      });\n      this.updateSize();\n      this.updateColor();\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _this12 = this;\n\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          data = this.data;\n      this.updatePositionCommand = reglInstance({\n        frag: updatePositionFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return _this12.currentPositionFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return _this12.previousPositionFbo;\n          },\n          velocity: function velocity() {\n            return _this12.velocityFbo;\n          },\n          friction: function friction() {\n            var _a;\n\n            return (_a = config.simulation) === null || _a === void 0 ? void 0 : _a.friction;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          }\n        }\n      });\n      this.drawCommand = reglInstance({\n        frag: drawPointsFrag,\n        vert: drawPointsVert,\n        primitive: 'points',\n        count: function count() {\n          return data.nodes.length;\n        },\n        attributes: {\n          indexes: createIndexesBuffer(reglInstance, store.pointsTextureSize)\n        },\n        uniforms: {\n          positions: function positions() {\n            return _this12.currentPositionFbo;\n          },\n          particleColor: function particleColor() {\n            return _this12.colorFbo;\n          },\n          particleSize: function particleSize() {\n            return _this12.sizeFbo;\n          },\n          ratio: function ratio() {\n            return config.pixelRatio;\n          },\n          sizeScale: function sizeScale() {\n            return config.nodeSizeScale;\n          },\n          pointsTextureSize: function pointsTextureSize() {\n            return store.pointsTextureSize;\n          },\n          transform: function transform() {\n            return store.transform;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          },\n          screenSize: function screenSize() {\n            return store.screenSize;\n          }\n        },\n        blend: {\n          enable: true,\n          func: {\n            dstRGB: 'one minus src alpha',\n            srcRGB: 'src alpha',\n            dstAlpha: 'one minus src alpha',\n            srcAlpha: 'one'\n          },\n          equation: {\n            rgb: 'add',\n            alpha: 'add'\n          }\n        },\n        depth: {\n          enable: false,\n          mask: false\n        }\n      });\n      this.findPointCommand = reglInstance({\n        frag: findPointFrag,\n        vert: updateVert,\n        framebuffer: function framebuffer() {\n          return _this12.selectedFbo;\n        },\n        primitive: 'triangle strip',\n        count: 4,\n        attributes: {\n          quad: createQuadBuffer(reglInstance)\n        },\n        uniforms: {\n          position: function position() {\n            return _this12.currentPositionFbo;\n          },\n          particleSize: function particleSize() {\n            return _this12.sizeFbo;\n          },\n          spaceSize: function spaceSize() {\n            return config.spaceSize;\n          },\n          screenSize: function screenSize() {\n            return store.screenSize;\n          },\n          sizeScale: function sizeScale() {\n            return config.nodeSizeScale;\n          },\n          transform: function transform() {\n            return store.transform;\n          },\n          ratio: function ratio() {\n            return config.pixelRatio;\n          },\n          'selection[0]': function selection0() {\n            return store.selectedArea[0];\n          },\n          'selection[1]': function selection1() {\n            return store.selectedArea[1];\n          },\n          isClick: function isClick(_, props) {\n            return props.isClick;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          nodes = this.data.nodes;\n      this.colorFbo = createColorBuffer(nodes, reglInstance, store.pointsTextureSize, config.nodeColor);\n    }\n  }, {\n    key: \"updateSize\",\n    value: function updateSize() {\n      var reglInstance = this.reglInstance,\n          config = this.config,\n          store = this.store,\n          nodes = this.data.nodes;\n      this.sizeFbo = createSizeBuffer(nodes, reglInstance, store.pointsTextureSize, config.nodeSize);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _a;\n\n      (_a = this.drawCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var _a;\n\n      (_a = this.updatePositionCommand) === null || _a === void 0 ? void 0 : _a.call(this);\n      this.swapFbo();\n    }\n  }, {\n    key: \"findPoint\",\n    value: function findPoint(isClick) {\n      var _a;\n\n      (_a = this.findPointCommand) === null || _a === void 0 ? void 0 : _a.call(this, {\n        isClick: isClick\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b, _c, _d, _e, _f;\n\n      (_a = this.currentPositionFbo) === null || _a === void 0 ? void 0 : _a.destroy();\n      (_b = this.previousPositionFbo) === null || _b === void 0 ? void 0 : _b.destroy();\n      (_c = this.velocityFbo) === null || _c === void 0 ? void 0 : _c.destroy();\n      (_d = this.selectedFbo) === null || _d === void 0 ? void 0 : _d.destroy();\n      (_e = this.colorFbo) === null || _e === void 0 ? void 0 : _e.destroy();\n      (_f = this.sizeFbo) === null || _f === void 0 ? void 0 : _f.destroy();\n    }\n  }, {\n    key: \"swapFbo\",\n    value: function swapFbo() {\n      var temp = this.previousPositionFbo;\n      this.previousPositionFbo = this.currentPositionFbo;\n      this.currentPositionFbo = temp;\n    }\n  }]);\n\n  return Points;\n}(CoreModule);\n\nvar ALPHA_MIN = 0.001;\n\nvar Store = /*#__PURE__*/function () {\n  function Store() {\n    _classCallCheck(this, Store);\n\n    this.pointsTextureSize = 0;\n    this.linksTextureSize = 0;\n    this.alpha = 1;\n    this.transform = _glMatrix.mat3.create();\n    this.backgroundColor = [0, 0, 0, 0];\n    this.screenSize = [0, 0];\n    this.mousePosition = [0, 0];\n    this.selectedArea = [[0, 0], [0, 0]];\n    this.simulationIsRunning = false;\n    this.simulationProgress = 0;\n    this.selectedIndices = new Float32Array();\n    this.alphaTarget = 0;\n\n    this.alphaDecay = function (decay) {\n      return 1 - Math.pow(ALPHA_MIN, 1 / decay);\n    };\n  }\n\n  _createClass(Store, [{\n    key: \"addAlpha\",\n    value: function addAlpha(decay) {\n      return (this.alphaTarget - this.alpha) * this.alphaDecay(decay);\n    }\n  }]);\n\n  return Store;\n}();\n\nvar Zoom = /*#__PURE__*/_createClass(function Zoom(store) {\n  var _this13 = this;\n\n  _classCallCheck(this, Zoom);\n\n  this.eventTransform = _d3Zoom.zoomIdentity;\n  this.behavior = (0, _d3Zoom.zoom)().on('start', function () {\n    _this13.isRunning = true;\n  }).on('zoom', function (event) {\n    _this13.eventTransform = event.transform;\n    var _this13$eventTransfor = _this13.eventTransform,\n        x = _this13$eventTransfor.x,\n        y = _this13$eventTransfor.y,\n        k = _this13$eventTransfor.k,\n        _this13$store = _this13.store,\n        transform = _this13$store.transform,\n        screenSize = _this13$store.screenSize;\n    var w = screenSize[0];\n    var h = screenSize[1];\n\n    _glMatrix.mat3.projection(transform, w, h);\n\n    _glMatrix.mat3.translate(transform, transform, [x, y]);\n\n    _glMatrix.mat3.scale(transform, transform, [k, k]);\n\n    _glMatrix.mat3.translate(transform, transform, [w / 2, h / 2]);\n\n    _glMatrix.mat3.scale(transform, transform, [w / 2, h / 2]);\n\n    _glMatrix.mat3.scale(transform, transform, [1, -1]);\n  }).on('end', function () {\n    _this13.isRunning = false;\n  });\n  this.isRunning = false;\n  this.store = store;\n});\n\nvar Graph = /*#__PURE__*/function () {\n  function Graph(canvas, config) {\n    _classCallCheck(this, Graph);\n\n    this.config = new GraphConfig();\n    this.requestAnimationFrameId = 0;\n    this.isRightClickMouse = false;\n    this.graph = new GraphData();\n    this.store = new Store();\n    this.zoomInstance = new Zoom(this.store);\n    this.hasBeenRecentlyDestroyed = false;\n    if (config) this.config.init(config);\n    var w = canvas.clientWidth;\n    var h = canvas.clientHeight;\n    this.store.screenSize = [w, h];\n    canvas.width = w * this.config.pixelRatio;\n    canvas.height = h * this.config.pixelRatio; // If the canvas element has no CSS width and height style, the clientWidth and the clientHeight will always be equal to the width and height canvas attribute.\n    // In order to prevent resize problem assume that canvas CSS style width and height has a value of 100%.\n\n    if (canvas.style.width === '' && canvas.style.height === '') {\n      (0, _d3Selection.select)(canvas).style('width', '100%').style('height', '100%');\n    }\n\n    this.canvas = canvas;\n    (0, _d3Selection.select)(canvas).call(this.zoomInstance.behavior).on('click', this.onClick.bind(this)).on('mousemove', this.onMouseMove.bind(this)).on('contextmenu', this.onRightClickMouse.bind(this));\n    this.reglInstance = (0, _regl.default)({\n      canvas: this.canvas,\n      attributes: {\n        antialias: false,\n        preserveDrawingBuffer: true,\n        premultipliedAlpha: false,\n        alpha: false\n      },\n      extensions: ['OES_texture_float', 'ANGLE_instanced_arrays']\n    });\n    this.points = new Points(this.reglInstance, this.config, this.store, this.graph);\n    this.lines = new Lines(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.forceGravity = new ForceGravity(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.forceCenter = new ForceCenter(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.forceManyBody = this.config.useQuadtree ? new ForceManyBodyQuadtree(this.reglInstance, this.config, this.store, this.graph, this.points) : new ForceManyBody(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.forceLinkIncoming = new ForceLink(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.forceLinkOutcoming = new ForceLink(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.forceMouse = new ForceMouse(this.reglInstance, this.config, this.store, this.graph, this.points);\n    this.store.backgroundColor = getRgbaColor(this.config.backgroundColor);\n    if (this.config.showFPSMonitor) this.fpsMonitor = new FPSMonitor(this.canvas);\n  }\n\n  _createClass(Graph, [{\n    key: \"progress\",\n    get: function get() {\n      return this.store.simulationProgress;\n    }\n  }, {\n    key: \"simulationIsRunning\",\n    get: function get() {\n      return this.store.simulationIsRunning;\n    }\n  }, {\n    key: \"nodes\",\n    get: function get() {\n      return this.graph.nodes;\n    }\n  }, {\n    key: \"links\",\n    get: function get() {\n      return this.graph.links;\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      var _a;\n\n      var prevConfig = _objectSpread({}, this.config);\n\n      this.config.init(config);\n      if (prevConfig.linkColor !== this.config.linkColor) this.lines.updateColor();\n      if (prevConfig.nodeColor !== this.config.nodeColor) this.points.updateColor();\n      if (prevConfig.nodeSize !== this.config.nodeSize) this.points.updateSize();\n      if (prevConfig.linkWidth !== this.config.linkWidth) this.lines.updateWidth();\n      if (prevConfig.backgroundColor !== this.config.backgroundColor) this.store.backgroundColor = getRgbaColor(this.config.backgroundColor);\n      if (prevConfig.spaceSize !== this.config.spaceSize || prevConfig.simulation.repulsionQuadtreeLevels !== this.config.simulation.repulsionQuadtreeLevels) this.update(this.store.simulationIsRunning);\n\n      if (prevConfig.showFPSMonitor !== this.config.showFPSMonitor) {\n        if (this.config.showFPSMonitor) {\n          this.fpsMonitor = new FPSMonitor(this.canvas);\n        } else {\n          (_a = this.fpsMonitor) === null || _a === void 0 ? void 0 : _a.destroy();\n          this.fpsMonitor = undefined;\n        }\n      }\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(nodes, links) {\n      var runSimulation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (!nodes.length && !links.length) {\n        this.destroy();\n        this.reglInstance.clear({\n          color: this.store.backgroundColor,\n          depth: 1,\n          stencil: 0\n        });\n        return;\n      }\n\n      this.graph.setData(nodes, links);\n      this.update(runSimulation);\n    }\n  }, {\n    key: \"findNodeById\",\n    value: function findNodeById(id) {\n      return this.graph.findNodeById(id);\n    }\n  }, {\n    key: \"selectNodeById\",\n    value: function selectNodeById(id) {\n      var node = this.graph.findNodeById(id);\n      if (!node) return;\n      var positionPixels = readPixels(this.reglInstance, this.points.currentPositionFbo);\n      var posX = positionPixels[node.index * 4 + 0];\n      var posY = positionPixels[node.index * 4 + 1];\n      if (posX === undefined || posY === undefined) return;\n      var scale = 8;\n      var translateX = posX - this.config.spaceSize / 2;\n      var translateY = posY - this.config.spaceSize / 2;\n      (0, _d3Selection.select)(this.canvas).transition().duration(250).call(this.zoomInstance.behavior.transform, _d3Zoom.zoomIdentity.translate(0, 0).scale(1).translate(-translateX, translateY)).transition().duration(500).call(this.zoomInstance.behavior.scaleTo, scale);\n    }\n  }, {\n    key: \"zoom\",\n    value: function zoom(value) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      (0, _d3Selection.select)(this.canvas).transition().duration(duration).call(this.zoomInstance.behavior.scaleTo, value);\n    }\n  }, {\n    key: \"getNodePositions\",\n    value: function getNodePositions() {\n      if (this.hasBeenRecentlyDestroyed) return {};\n      var particlePositionPixels = readPixels(this.reglInstance, this.points.currentPositionFbo);\n      return this.graph.nodes.reduce(function (acc, curr, i) {\n        var posX = particlePositionPixels[i * 4 + 0];\n        var posY = particlePositionPixels[i * 4 + 1];\n\n        if (posX !== undefined && posY !== undefined) {\n          acc[curr.id] = {\n            x: posX,\n            y: posY\n          };\n        }\n\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selection) {\n      if (selection) {\n        var h = this.store.screenSize[1];\n        this.store.selectedArea = [[selection[0][0], h - selection[1][1]], [selection[1][0], h - selection[0][1]]];\n        this.points.findPoint(false);\n        var pixels = readPixels(this.reglInstance, this.points.selectedFbo);\n        this.store.selectedIndices = pixels.map(function (pixel, i) {\n          if (i % 4 === 0 && pixel !== 0) return i / 4;else return -1;\n        }).filter(function (d) {\n          return d !== -1;\n        });\n      } else {\n        this.store.selectedIndices = new Float32Array();\n      }\n    }\n  }, {\n    key: \"selectedPoints\",\n    get: function get() {\n      var _this14 = this;\n\n      return this.graph.nodes.filter(function (n, i) {\n        return _this14.store.selectedIndices.includes(i);\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var alpha = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      var _a, _b;\n\n      if (!this.graph.nodes.length) return;\n      this.store.simulationIsRunning = true;\n      this.store.alpha = alpha;\n      this.store.simulationProgress = 0;\n      (_b = (_a = this.config.simulation).onStart) === null || _b === void 0 ? void 0 : _b.call(_a);\n      this.stopFrames();\n      this.frame();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _a, _b;\n\n      this.store.simulationIsRunning = false;\n      (_b = (_a = this.config.simulation).onPause) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      var _a, _b;\n\n      this.store.simulationIsRunning = true;\n      (_b = (_a = this.config.simulation).onRestart) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, {\n    key: \"drawOneFrame\",\n    value: function drawOneFrame() {\n      this.store.simulationIsRunning = false;\n      this.stopFrames();\n      this.frame();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a;\n\n      this.stopFrames();\n      if (this.hasBeenRecentlyDestroyed) return;\n      this.points.destroy();\n      this.lines.destroy();\n      this.forceCenter.destroy();\n      this.forceLinkIncoming.destroy();\n      this.forceLinkOutcoming.destroy();\n      (_a = this.forceManyBody) === null || _a === void 0 ? void 0 : _a.destroy();\n      this.reglInstance.destroy();\n      this.hasBeenRecentlyDestroyed = true;\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _a;\n\n      this.points.create();\n      this.lines.create();\n      (_a = this.forceManyBody) === null || _a === void 0 ? void 0 : _a.create();\n      this.forceLinkIncoming.create(LinkDirection.INCOMING);\n      this.forceLinkOutcoming.create(LinkDirection.OUTCOMING);\n      this.forceCenter.create();\n      this.hasBeenRecentlyDestroyed = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update(runSimulation) {\n      var graph = this.graph;\n      this.store.pointsTextureSize = Math.ceil(Math.sqrt(graph.nodes.length));\n      this.store.linksTextureSize = Math.ceil(Math.sqrt(graph.links.length * 2));\n      this.destroy();\n      this.create();\n      this.initPrograms();\n\n      if (runSimulation) {\n        this.start();\n      } else {\n        this.drawOneFrame();\n      }\n    }\n  }, {\n    key: \"initPrograms\",\n    value: function initPrograms() {\n      var _a;\n\n      this.points.initPrograms();\n      this.lines.initPrograms();\n      this.forceGravity.initPrograms();\n      this.forceLinkIncoming.initPrograms();\n      this.forceLinkOutcoming.initPrograms();\n      this.forceMouse.initPrograms();\n      (_a = this.forceManyBody) === null || _a === void 0 ? void 0 : _a.initPrograms();\n      this.forceCenter.initPrograms();\n    }\n  }, {\n    key: \"frame\",\n    value: function frame() {\n      var _this15 = this;\n\n      var _this$config = this.config,\n          simulation = _this$config.simulation,\n          renderLinks = _this$config.renderLinks,\n          _this$store2 = this.store,\n          alpha = _this$store2.alpha,\n          simulationIsRunning = _this$store2.simulationIsRunning;\n      if (alpha < ALPHA_MIN && simulationIsRunning) this.end();\n      this.requestAnimationFrameId = window.requestAnimationFrame(function (now) {\n        var _a, _b, _c, _d, _e, _f;\n\n        (_a = _this15.fpsMonitor) === null || _a === void 0 ? void 0 : _a.begin();\n\n        _this15.resizeCanvas();\n\n        if (_this15.isRightClickMouse) {\n          if (!simulationIsRunning) _this15.start(0.1);\n\n          _this15.forceMouse.run();\n\n          _this15.points.updatePosition();\n        }\n\n        if (simulationIsRunning && !_this15.zoomInstance.isRunning) {\n          if (simulation.gravity) {\n            _this15.forceGravity.run();\n\n            _this15.points.updatePosition();\n          }\n\n          if (simulation.center) {\n            _this15.forceCenter.run();\n\n            _this15.points.updatePosition();\n          }\n\n          (_b = _this15.forceManyBody) === null || _b === void 0 ? void 0 : _b.run();\n\n          _this15.points.updatePosition();\n\n          _this15.forceLinkIncoming.run();\n\n          _this15.points.updatePosition();\n\n          _this15.forceLinkOutcoming.run();\n\n          _this15.points.updatePosition();\n\n          _this15.store.alpha += _this15.store.addAlpha((_c = _this15.config.simulation.decay) !== null && _c !== void 0 ? _c : defaultConfigValues.simulation.decay);\n          if (_this15.isRightClickMouse) _this15.store.alpha = Math.max(_this15.store.alpha, 0.1);\n          _this15.store.simulationProgress = Math.sqrt(Math.min(1, ALPHA_MIN / _this15.store.alpha));\n          (_e = (_d = _this15.config.simulation).onTick) === null || _e === void 0 ? void 0 : _e.call(_d, _this15.store.alpha);\n        } // Clear canvas\n\n\n        _this15.reglInstance.clear({\n          color: _this15.store.backgroundColor,\n          depth: 1,\n          stencil: 0\n        });\n\n        if (renderLinks) {\n          _this15.lines.draw();\n        }\n\n        _this15.points.draw();\n\n        (_f = _this15.fpsMonitor) === null || _f === void 0 ? void 0 : _f.end(now);\n\n        _this15.frame();\n      });\n    }\n  }, {\n    key: \"stopFrames\",\n    value: function stopFrames() {\n      if (this.requestAnimationFrameId) window.cancelAnimationFrame(this.requestAnimationFrameId);\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var _a, _b;\n\n      this.store.simulationIsRunning = false;\n      this.store.simulationProgress = 1;\n      (_b = (_a = this.config.simulation).onEnd) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      var _a, _b, _c;\n\n      var h = this.store.screenSize[1];\n      this.store.selectedArea = [[event.offsetX, h - event.offsetY], [event.offsetX, h - event.offsetY]];\n      this.points.findPoint(true);\n      var pixels = readPixels(this.reglInstance, this.points.selectedFbo);\n      var selectedIndices = pixels.map(function (pixel, i) {\n        if (i % 4 === 0 && pixel !== 0) return i / 4;else return 404;\n      }).filter(function (d) {\n        return d !== 404;\n      });\n      this.store.selectedIndices = selectedIndices;\n      var clickedId = (_a = selectedIndices[selectedIndices.length - 1]) !== null && _a !== void 0 ? _a : -1;\n      var clickedParticle = selectedIndices.length ? this.graph.nodes[clickedId] : undefined;\n      (_c = (_b = this.config.events).onClick) === null || _c === void 0 ? void 0 : _c.call(_b, clickedParticle);\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var _this$zoomInstance$ev = this.zoomInstance.eventTransform,\n          x = _this$zoomInstance$ev.x,\n          y = _this$zoomInstance$ev.y,\n          k = _this$zoomInstance$ev.k;\n      var h = this.canvas.clientHeight;\n      var mouseX = event.offsetX;\n      var mouseY = event.offsetY;\n      var invertedX = (mouseX - x) / k;\n      var invertedY = (mouseY - y) / k;\n      this.store.mousePosition = [invertedX, h - invertedY];\n      this.store.mousePosition[0] -= (this.store.screenSize[0] - this.config.spaceSize) / 2;\n      this.store.mousePosition[1] -= (this.store.screenSize[1] - this.config.spaceSize) / 2;\n      this.isRightClickMouse = event.which === 3;\n    }\n  }, {\n    key: \"onRightClickMouse\",\n    value: function onRightClickMouse(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"resizeCanvas\",\n    value: function resizeCanvas() {\n      var prevWidth = this.canvas.width;\n      var prevHeight = this.canvas.height;\n      var w = this.canvas.clientWidth;\n      var h = this.canvas.clientHeight;\n\n      if (prevWidth !== w * this.config.pixelRatio || prevHeight !== h * this.config.pixelRatio) {\n        this.store.screenSize = [w, h];\n        this.canvas.width = w * this.config.pixelRatio;\n        this.canvas.height = h * this.config.pixelRatio;\n        this.reglInstance.poll();\n        (0, _d3Selection.select)(this.canvas).call(this.zoomInstance.behavior.transform, this.zoomInstance.eventTransform);\n      }\n    }\n  }]);\n\n  return Graph;\n}();\n\nexports.Graph = Graph;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":1},"generated":{"line":1273,"column":2}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":11},"generated":{"line":1273,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":1},"generated":{"line":1273,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":19},"generated":{"line":1273,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":1},"generated":{"line":1273,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":28},"generated":{"line":1273,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":65},"generated":{"line":1274,"column":4}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":65},"generated":{"line":1274,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":65},"generated":{"line":1274,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":65},"generated":{"line":1274,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":82},"generated":{"line":1274,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":89},"generated":{"line":1274,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":2,"column":65},"generated":{"line":1274,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":1},"generated":{"line":1275,"column":2}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":1},"generated":{"line":1275,"column":3}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":"this","original":{"line":5,"column":2},"generated":{"line":1275,"column":5}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":1},"generated":{"line":1275,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":9},"generated":{"line":1275,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1275,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":7,"column":2},"generated":{"line":1276,"column":4}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":7,"column":6},"generated":{"line":1276,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":7,"column":11},"generated":{"line":1276,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":7,"column":14},"generated":{"line":1276,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":7,"column":2},"generated":{"line":1276,"column":2267}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":9,"column":2},"generated":{"line":1277,"column":4}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":9,"column":6},"generated":{"line":1277,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":9,"column":11},"generated":{"line":1277,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":9,"column":14},"generated":{"line":1277,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":9,"column":2},"generated":{"line":1277,"column":940}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1279,"column":4}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":11,"column":8},"generated":{"line":1279,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1279,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":13,"column":0},"generated":{"line":1280,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":14,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":15,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":16,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":4},"generated":{"line":1284,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":16},"generated":{"line":1284,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":4},"generated":{"line":1284,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1284,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1285,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1287,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":20},"generated":{"line":1287,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1287,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":31},"generated":{"line":1287,"column":91}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1287,"column":93}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1289,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":18,"column":6},"generated":{"line":1291,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":18,"column":11},"generated":{"line":1291,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":18,"column":6},"generated":{"line":1291,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":18,"column":17},"generated":{"line":1291,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":18,"column":6},"generated":{"line":1291,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":19,"column":6},"generated":{"line":1292,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":19,"column":11},"generated":{"line":1292,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":19,"column":6},"generated":{"line":1292,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":19,"column":17},"generated":{"line":1292,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":19,"column":6},"generated":{"line":1292,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":6},"generated":{"line":1294,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":11},"generated":{"line":1294,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":6},"generated":{"line":1294,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":25},"generated":{"line":1294,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":31},"generated":{"line":1294,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":33},"generated":{"line":1294,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":20,"column":6},"generated":{"line":1294,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":6},"generated":{"line":1296,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":11},"generated":{"line":1296,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":6},"generated":{"line":1296,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":25},"generated":{"line":1296,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":31},"generated":{"line":1296,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":33},"generated":{"line":1296,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":21,"column":6},"generated":{"line":1296,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":22,"column":6},"generated":{"line":1298,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":22,"column":11},"generated":{"line":1298,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":22,"column":6},"generated":{"line":1298,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":22,"column":22},"generated":{"line":1298,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":22,"column":6},"generated":{"line":1298,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":23,"column":6},"generated":{"line":1299,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":23,"column":11},"generated":{"line":1299,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":23,"column":6},"generated":{"line":1299,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":23,"column":21},"generated":{"line":1299,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":23,"column":6},"generated":{"line":1299,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":25,"column":6},"generated":{"line":1300,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":25,"column":11},"generated":{"line":1300,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":25,"column":6},"generated":{"line":1300,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":25,"column":19},"generated":{"line":1300,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":25,"column":6},"generated":{"line":1300,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":26,"column":6},"generated":{"line":1301,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":26,"column":11},"generated":{"line":1301,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":26,"column":6},"generated":{"line":1301,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":26,"column":23},"generated":{"line":1301,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":26,"column":6},"generated":{"line":1301,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":27,"column":6},"generated":{"line":1302,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":27,"column":11},"generated":{"line":1302,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":27,"column":6},"generated":{"line":1302,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":27,"column":23},"generated":{"line":1302,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":27,"column":6},"generated":{"line":1302,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":28,"column":6},"generated":{"line":1303,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":28,"column":11},"generated":{"line":1303,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":28,"column":6},"generated":{"line":1303,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":28,"column":26},"generated":{"line":1303,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":28,"column":6},"generated":{"line":1303,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":6},"generated":{"line":1304,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":11},"generated":{"line":1304,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":6},"generated":{"line":1304,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":19},"generated":{"line":1304,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":23},"generated":{"line":1304,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":19},"generated":{"line":1304,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":29},"generated":{"line":1304,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":34},"generated":{"line":1304,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":19},"generated":{"line":1304,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":29,"column":6},"generated":{"line":1304,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":6},"generated":{"line":1306,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":11},"generated":{"line":1306,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":6},"generated":{"line":1306,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":17},"generated":{"line":1306,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":17},"generated":{"line":1307,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":24},"generated":{"line":1307,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":35},"generated":{"line":1307,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":39},"generated":{"line":1307,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":50},"generated":{"line":1307,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":51},"generated":{"line":1307,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":23},"generated":{"line":1307,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":58},"generated":{"line":1307,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":69},"generated":{"line":1307,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":70},"generated":{"line":1307,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":58},"generated":{"line":1307,"column":65}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":23},"generated":{"line":1307,"column":67}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":78},"generated":{"line":1307,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":82},"generated":{"line":1307,"column":74}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":83},"generated":{"line":1307,"column":75}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":78},"generated":{"line":1307,"column":78}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":17},"generated":{"line":1307,"column":80}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":17},"generated":{"line":1308,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":30,"column":6},"generated":{"line":1308,"column":9}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":31,"column":6},"generated":{"line":1310,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":31,"column":11},"generated":{"line":1310,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":31,"column":6},"generated":{"line":1310,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":31,"column":22},"generated":{"line":1310,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":31,"column":28},"generated":{"line":1310,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":8},"generated":{"line":1311,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":11},"generated":{"line":1311,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":8},"generated":{"line":1311,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":19},"generated":{"line":1311,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":8},"generated":{"line":1311,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":24},"generated":{"line":1311,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":28},"generated":{"line":1311,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":29},"generated":{"line":1311,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":24},"generated":{"line":1311,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":35},"generated":{"line":1311,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":24},"generated":{"line":1311,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":8},"generated":{"line":1311,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":50},"generated":{"line":1311,"column":54}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":50},"generated":{"line":1311,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":54},"generated":{"line":1311,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":58},"generated":{"line":1311,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":10},"generated":{"line":1312,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":14},"generated":{"line":1312,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":15},"generated":{"line":1312,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":10},"generated":{"line":1312,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":21},"generated":{"line":1312,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":10},"generated":{"line":1312,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":31},"generated":{"line":1312,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":35},"generated":{"line":1312,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":36},"generated":{"line":1312,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":31},"generated":{"line":1312,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":47},"generated":{"line":1312,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":31},"generated":{"line":1312,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":58},"generated":{"line":1312,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":33,"column":10},"generated":{"line":1312,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":34,"column":9},"generated":{"line":1313,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":32,"column":8},"generated":{"line":1313,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":35,"column":7},"generated":{"line":1314,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":31,"column":6},"generated":{"line":1314,"column":9}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":6},"generated":{"line":1316,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":12},"generated":{"line":1316,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":13},"generated":{"line":1316,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":6},"generated":{"line":1316,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":20},"generated":{"line":1316,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":6},"generated":{"line":1316,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":26},"generated":{"line":1316,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":37,"column":6},"generated":{"line":1316,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":38,"column":6},"generated":{"line":1317,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":38,"column":11},"generated":{"line":1317,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":38,"column":6},"generated":{"line":1317,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":38,"column":22},"generated":{"line":1317,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":38,"column":6},"generated":{"line":1317,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":39,"column":6},"generated":{"line":1318,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":39,"column":11},"generated":{"line":1318,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":39,"column":6},"generated":{"line":1318,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":39,"column":22},"generated":{"line":1318,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":39,"column":6},"generated":{"line":1318,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":40,"column":6},"generated":{"line":1319,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":40,"column":11},"generated":{"line":1319,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":40,"column":6},"generated":{"line":1319,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":40,"column":27},"generated":{"line":1319,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":40,"column":6},"generated":{"line":1319,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":41,"column":6},"generated":{"line":1320,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":41,"column":11},"generated":{"line":1320,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":41,"column":6},"generated":{"line":1320,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":41,"column":21},"generated":{"line":1320,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":41,"column":6},"generated":{"line":1320,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1320,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":43,"column":0},"generated":{"line":1320,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":6},"generated":{"line":1322,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":10},"generated":{"line":1322,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":6},"generated":{"line":1322,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":6},"generated":{"line":1323,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":17},"generated":{"line":1323,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":18},"generated":{"line":1323,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":21},"generated":{"line":1323,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":6},"generated":{"line":1323,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":6},"generated":{"line":1324,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":24},"generated":{"line":1324,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":44,"column":6},"generated":{"line":1324,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":6},"generated":{"line":1326,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":10},"generated":{"line":1326,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":14},"generated":{"line":1326,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":17},"generated":{"line":1326,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":10},"generated":{"line":1326,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":17},"generated":{"line":1326,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":18},"generated":{"line":1326,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":17},"generated":{"line":1326,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":24},"generated":{"line":1326,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":8},"generated":{"line":1327,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":12},"generated":{"line":1327,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":14},"generated":{"line":1327,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":12},"generated":{"line":1327,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":18},"generated":{"line":1327,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":8},"generated":{"line":1327,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":22},"generated":{"line":1327,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":10},"generated":{"line":1328,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":15},"generated":{"line":1328,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":18},"generated":{"line":1328,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":39},"generated":{"line":1328,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":40},"generated":{"line":1328,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":39},"generated":{"line":1328,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":47,"column":10},"generated":{"line":1328,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":48,"column":9},"generated":{"line":1329,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":46,"column":8},"generated":{"line":1329,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":48,"column":15},"generated":{"line":1329,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":10},"generated":{"line":1330,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":14},"generated":{"line":1330,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":15},"generated":{"line":1330,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":10},"generated":{"line":1330,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":26},"generated":{"line":1330,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":30},"generated":{"line":1330,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":31},"generated":{"line":1330,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":26},"generated":{"line":1330,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":36},"generated":{"line":1330,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":42},"generated":{"line":1330,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":36},"generated":{"line":1330,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":47},"generated":{"line":1330,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":48},"generated":{"line":1330,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":51},"generated":{"line":1330,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":36},"generated":{"line":1330,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":57},"generated":{"line":1330,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":26},"generated":{"line":1330,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":49,"column":10},"generated":{"line":1330,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":50,"column":10},"generated":{"line":1331,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":50,"column":30},"generated":{"line":1331,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":50,"column":31},"generated":{"line":1331,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":50,"column":30},"generated":{"line":1331,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":50,"column":10},"generated":{"line":1331,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":51,"column":9},"generated":{"line":1332,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":8},"generated":{"line":1334,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":12},"generated":{"line":1334,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":13},"generated":{"line":1334,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":8},"generated":{"line":1334,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":17},"generated":{"line":1334,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":19},"generated":{"line":1334,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":22},"generated":{"line":1334,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":52,"column":17},"generated":{"line":1334,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":53,"column":7},"generated":{"line":1335,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":45,"column":6},"generated":{"line":1335,"column":9}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":54,"column":6},"generated":{"line":1337,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":54,"column":27},"generated":{"line":1337,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":54,"column":28},"generated":{"line":1337,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":54,"column":27},"generated":{"line":1337,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":54,"column":6},"generated":{"line":1337,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1337,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":56,"column":0},"generated":{"line":1337,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":57,"column":6},"generated":{"line":1339,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":57,"column":10},"generated":{"line":1339,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":57,"column":6},"generated":{"line":1339,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":57,"column":14},"generated":{"line":1339,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":8},"generated":{"line":1340,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":14},"generated":{"line":1340,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1340,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1341,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1341,"column":82}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":32},"generated":{"line":1341,"column":99}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1341,"column":100}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":35},"generated":{"line":1341,"column":102}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1341,"column":114}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1342,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1343,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1344,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1345,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1346,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":10},"generated":{"line":1346,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":17},"generated":{"line":1346,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":18},"generated":{"line":1346,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":10},"generated":{"line":1346,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":26},"generated":{"line":1346,"column":71}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":36},"generated":{"line":1346,"column":81}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":37},"generated":{"line":1346,"column":82}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":43},"generated":{"line":1346,"column":94}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":60,"column":12},"generated":{"line":1347,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":60,"column":14},"generated":{"line":1347,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":60,"column":15},"generated":{"line":1347,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":60,"column":12},"generated":{"line":1347,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":12},"generated":{"line":1348,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":18},"generated":{"line":1348,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":20},"generated":{"line":1348,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":23},"generated":{"line":1348,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":27},"generated":{"line":1348,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":28},"generated":{"line":1348,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":23},"generated":{"line":1348,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":36},"generated":{"line":1348,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":61,"column":12},"generated":{"line":1348,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":12},"generated":{"line":1349,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":24},"generated":{"line":1349,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":25},"generated":{"line":1349,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":12},"generated":{"line":1349,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":33},"generated":{"line":1349,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":34},"generated":{"line":1349,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":33},"generated":{"line":1349,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":42},"generated":{"line":1349,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":33},"generated":{"line":1349,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":48},"generated":{"line":1349,"column":66}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":14},"generated":{"line":1350,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":18},"generated":{"line":1350,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":14},"generated":{"line":1350,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":26},"generated":{"line":1350,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":30},"generated":{"line":1350,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":31},"generated":{"line":1350,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":26},"generated":{"line":1350,"column":54}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":41},"generated":{"line":1350,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":26},"generated":{"line":1350,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":47},"generated":{"line":1350,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":63,"column":26},"generated":{"line":1350,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":64,"column":13},"generated":{"line":1351,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":62,"column":12},"generated":{"line":1351,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":65,"column":11},"generated":{"line":1352,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":36},"generated":{"line":1352,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":65,"column":13},"generated":{"line":1352,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":36},"generated":{"line":1352,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":59,"column":10},"generated":{"line":1352,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1352,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1354,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1355,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1356,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1357,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1358,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1359,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":25},"generated":{"line":1360,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1360,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1362,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":14},"generated":{"line":1362,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1362,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1363,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1364,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":22},"generated":{"line":1365,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":58,"column":8},"generated":{"line":1365,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":8},"generated":{"line":1367,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":14},"generated":{"line":1367,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":25},"generated":{"line":1367,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1367,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":14},"generated":{"line":1367,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1367,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":29},"generated":{"line":1367,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1367,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":33},"generated":{"line":1367,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1367,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":39},"generated":{"line":1367,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1367,"column":65}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1368,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":50},"generated":{"line":1368,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":61},"generated":{"line":1368,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":10},"generated":{"line":1369,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":16},"generated":{"line":1369,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":17},"generated":{"line":1369,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":20},"generated":{"line":1369,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":24},"generated":{"line":1369,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":25},"generated":{"line":1369,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":20},"generated":{"line":1369,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":68,"column":10},"generated":{"line":1369,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":10},"generated":{"line":1370,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":12},"generated":{"line":1370,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":13},"generated":{"line":1370,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":10},"generated":{"line":1370,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":19},"generated":{"line":1370,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":10},"generated":{"line":1370,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":27},"generated":{"line":1370,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":69,"column":10},"generated":{"line":1370,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":10},"generated":{"line":1371,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":14},"generated":{"line":1371,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":18},"generated":{"line":1371,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":19},"generated":{"line":1371,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":10},"generated":{"line":1371,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":29},"generated":{"line":1371,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":33},"generated":{"line":1371,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":34},"generated":{"line":1371,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":29},"generated":{"line":1371,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":43},"generated":{"line":1371,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":29},"generated":{"line":1371,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":48},"generated":{"line":1371,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":56},"generated":{"line":1371,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":57},"generated":{"line":1371,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":56},"generated":{"line":1371,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":60},"generated":{"line":1371,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":64},"generated":{"line":1371,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":65},"generated":{"line":1371,"column":69}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":60},"generated":{"line":1371,"column":81}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":78},"generated":{"line":1371,"column":82}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":60},"generated":{"line":1371,"column":87}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":84},"generated":{"line":1371,"column":88}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":60},"generated":{"line":1371,"column":89}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":56},"generated":{"line":1371,"column":90}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":70,"column":29},"generated":{"line":1371,"column":91}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":71,"column":9},"generated":{"line":1372,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1372,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":28},"generated":{"line":1373,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":67,"column":8},"generated":{"line":1373,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":9},"generated":{"line":1375,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":23},"generated":{"line":1375,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":39},"generated":{"line":1375,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":74,"column":10},"generated":{"line":1375,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":77}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":74,"column":25},"generated":{"line":1375,"column":79}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":102}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":74,"column":50},"generated":{"line":1375,"column":104}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":123}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":11},"generated":{"line":1375,"column":125}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1375,"column":132}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":19},"generated":{"line":1375,"column":133}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":19},"generated":{"line":1375,"column":143}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":21},"generated":{"line":1375,"column":145}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":25},"generated":{"line":1375,"column":147}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":27},"generated":{"line":1376,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":31},"generated":{"line":1376,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":33},"generated":{"line":1376,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":34},"generated":{"line":1376,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":33},"generated":{"line":1376,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":27},"generated":{"line":1376,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":39},"generated":{"line":1376,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":41},"generated":{"line":1376,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":42},"generated":{"line":1376,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":41},"generated":{"line":1376,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":39},"generated":{"line":1376,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":48},"generated":{"line":1376,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":59},"generated":{"line":1376,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":60},"generated":{"line":1376,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":62},"generated":{"line":1376,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":63},"generated":{"line":1376,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":62},"generated":{"line":1376,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":59},"generated":{"line":1376,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":68},"generated":{"line":1376,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":59},"generated":{"line":1376,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":74},"generated":{"line":1376,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":59},"generated":{"line":1376,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":39},"generated":{"line":1376,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":75,"column":80},"generated":{"line":1377,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":73,"column":8},"generated":{"line":1377,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":8},"generated":{"line":1379,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":10},"generated":{"line":1379,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":11},"generated":{"line":1379,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":8},"generated":{"line":1379,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":27},"generated":{"line":1379,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":28},"generated":{"line":1379,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":27},"generated":{"line":1379,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":32},"generated":{"line":1379,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":27},"generated":{"line":1379,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":27},"generated":{"line":1380,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":41},"generated":{"line":1380,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":52},"generated":{"line":1380,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":10},"generated":{"line":1381,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":14},"generated":{"line":1381,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":17},"generated":{"line":1381,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":20},"generated":{"line":1381,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":22},"generated":{"line":1381,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":23},"generated":{"line":1381,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":20},"generated":{"line":1381,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":29},"generated":{"line":1381,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":20},"generated":{"line":1381,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":33},"generated":{"line":1381,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":20},"generated":{"line":1381,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":78,"column":10},"generated":{"line":1381,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":79,"column":10},"generated":{"line":1383,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":79,"column":14},"generated":{"line":1383,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":79,"column":10},"generated":{"line":1383,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":79,"column":19},"generated":{"line":1383,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":12},"generated":{"line":1384,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":13},"generated":{"line":1384,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":12},"generated":{"line":1384,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":43},"generated":{"line":1384,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":12},"generated":{"line":1384,"column":65}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":15},"generated":{"line":1384,"column":67}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":12},"generated":{"line":1384,"column":74}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":23},"generated":{"line":1384,"column":75}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":23},"generated":{"line":1384,"column":85}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":25},"generated":{"line":1384,"column":87}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":29},"generated":{"line":1384,"column":89}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":31},"generated":{"line":1385,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":35},"generated":{"line":1385,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":38},"generated":{"line":1385,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":39},"generated":{"line":1385,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":38},"generated":{"line":1385,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":31},"generated":{"line":1385,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":44},"generated":{"line":1385,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":47},"generated":{"line":1385,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":48},"generated":{"line":1385,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":47},"generated":{"line":1385,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":44},"generated":{"line":1385,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":54},"generated":{"line":1385,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":65},"generated":{"line":1385,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":66},"generated":{"line":1385,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":69},"generated":{"line":1385,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":70},"generated":{"line":1385,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":69},"generated":{"line":1385,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":65},"generated":{"line":1385,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":75},"generated":{"line":1385,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":65},"generated":{"line":1385,"column":66}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":81},"generated":{"line":1385,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":65},"generated":{"line":1385,"column":71}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":44},"generated":{"line":1385,"column":72}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":81,"column":88},"generated":{"line":1386,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":80,"column":12},"generated":{"line":1386,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":82,"column":11},"generated":{"line":1387,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":83,"column":10},"generated":{"line":1389,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":83,"column":17},"generated":{"line":1389,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":83,"column":10},"generated":{"line":1389,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":84,"column":9},"generated":{"line":1390,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":27},"generated":{"line":1390,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":27},"generated":{"line":1391,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":26},"generated":{"line":1391,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":84,"column":11},"generated":{"line":1391,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":84,"column":13},"generated":{"line":1391,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":84,"column":14},"generated":{"line":1391,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":26},"generated":{"line":1391,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":84,"column":28},"generated":{"line":1391,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":26},"generated":{"line":1391,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":77,"column":8},"generated":{"line":1391,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":85,"column":7},"generated":{"line":1392,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":17,"column":35},"generated":{"line":1392,"column":9}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":87,"column":0},"generated":{"line":1392,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":88,"column":6},"generated":{"line":1395,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":88,"column":10},"generated":{"line":1395,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":88,"column":11},"generated":{"line":1395,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":88,"column":16},"generated":{"line":1395,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":88,"column":6},"generated":{"line":1395,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":88,"column":27},"generated":{"line":1395,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":8},"generated":{"line":1396,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":12},"generated":{"line":1396,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":13},"generated":{"line":1396,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":18},"generated":{"line":1396,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":8},"generated":{"line":1396,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":23},"generated":{"line":1396,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":28},"generated":{"line":1396,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":23},"generated":{"line":1396,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":34},"generated":{"line":1396,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":42},"generated":{"line":1396,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":43},"generated":{"line":1396,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":89,"column":23},"generated":{"line":1396,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":8},"generated":{"line":1397,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":12},"generated":{"line":1397,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":15},"generated":{"line":1397,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":18},"generated":{"line":1397,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":26},"generated":{"line":1397,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":27},"generated":{"line":1397,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":18},"generated":{"line":1397,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":41},"generated":{"line":1397,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":18},"generated":{"line":1397,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":90,"column":8},"generated":{"line":1397,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":91,"column":8},"generated":{"line":1398,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":91,"column":11},"generated":{"line":1398,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":91,"column":12},"generated":{"line":1398,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":91,"column":8},"generated":{"line":1398,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":91,"column":17},"generated":{"line":1398,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":91,"column":8},"generated":{"line":1398,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":8},"generated":{"line":1399,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":13},"generated":{"line":1399,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":8},"generated":{"line":1399,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":17},"generated":{"line":1399,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":8},"generated":{"line":1399,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":29},"generated":{"line":1399,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":92,"column":8},"generated":{"line":1399,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":8},"generated":{"line":1400,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":13},"generated":{"line":1400,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":8},"generated":{"line":1400,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":17},"generated":{"line":1400,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":8},"generated":{"line":1400,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":36},"generated":{"line":1400,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":8},"generated":{"line":1400,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":50},"generated":{"line":1400,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":82},"generated":{"line":1400,"column":84}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":87},"generated":{"line":1400,"column":89}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":50},"generated":{"line":1400,"column":92}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":93},"generated":{"line":1400,"column":95}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":93,"column":8},"generated":{"line":1400,"column":105}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":94,"column":8},"generated":{"line":1401,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":94,"column":13},"generated":{"line":1401,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":94,"column":8},"generated":{"line":1401,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":94,"column":19},"generated":{"line":1401,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":94,"column":8},"generated":{"line":1401,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":8},"generated":{"line":1402,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":13},"generated":{"line":1402,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":8},"generated":{"line":1402,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":17},"generated":{"line":1402,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":8},"generated":{"line":1402,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":34},"generated":{"line":1402,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":8},"generated":{"line":1402,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":43},"generated":{"line":1402,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":49},"generated":{"line":1402,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":10},"generated":{"line":1403,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":14},"generated":{"line":1403,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":15},"generated":{"line":1403,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":10},"generated":{"line":1403,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":26},"generated":{"line":1403,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":27},"generated":{"line":1403,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":31},"generated":{"line":1403,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":32},"generated":{"line":1403,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":96,"column":10},"generated":{"line":1403,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":97,"column":10},"generated":{"line":1405,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":97,"column":14},"generated":{"line":1405,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":97,"column":15},"generated":{"line":1405,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":97,"column":10},"generated":{"line":1405,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":98,"column":9},"generated":{"line":1406,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":95,"column":8},"generated":{"line":1406,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":8},"generated":{"line":1408,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":13},"generated":{"line":1408,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":8},"generated":{"line":1408,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":28},"generated":{"line":1408,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":29},"generated":{"line":1408,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":28},"generated":{"line":1408,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":37},"generated":{"line":1408,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":28},"generated":{"line":1408,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":42},"generated":{"line":1408,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":28},"generated":{"line":1408,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":52},"generated":{"line":1408,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":10},"generated":{"line":1409,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":16},"generated":{"line":1409,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":23},"generated":{"line":1409,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":27},"generated":{"line":1409,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":37},"generated":{"line":1409,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":47},"generated":{"line":1409,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":57},"generated":{"line":1409,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":65}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":67},"generated":{"line":1409,"column":67}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":79}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":81},"generated":{"line":1409,"column":81}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":26},"generated":{"line":1409,"column":91}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":101,"column":10},"generated":{"line":1409,"column":92}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":10},"generated":{"line":1410,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":16},"generated":{"line":1410,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":21},"generated":{"line":1410,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":24},"generated":{"line":1410,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":30},"generated":{"line":1410,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":31},"generated":{"line":1410,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":24},"generated":{"line":1410,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":38},"generated":{"line":1410,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":24},"generated":{"line":1410,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":42},"generated":{"line":1410,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":24},"generated":{"line":1410,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":102,"column":10},"generated":{"line":1410,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":10},"generated":{"line":1411,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":17},"generated":{"line":1411,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":18},"generated":{"line":1411,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":10},"generated":{"line":1411,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":26},"generated":{"line":1411,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":26},"generated":{"line":1411,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":27},"generated":{"line":1411,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":27},"generated":{"line":1412,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":31},"generated":{"line":1412,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":36},"generated":{"line":1412,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":37},"generated":{"line":1412,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":36},"generated":{"line":1412,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":31},"generated":{"line":1412,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":42},"generated":{"line":1412,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":45},"generated":{"line":1412,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":46},"generated":{"line":1412,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":42},"generated":{"line":1412,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":69},"generated":{"line":1412,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":42},"generated":{"line":1412,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":27},"generated":{"line":1412,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":27},"generated":{"line":1413,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":103,"column":10},"generated":{"line":1413,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":104,"column":10},"generated":{"line":1414,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":104,"column":14},"generated":{"line":1414,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":104,"column":15},"generated":{"line":1414,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":104,"column":10},"generated":{"line":1414,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":104,"column":23},"generated":{"line":1414,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":104,"column":10},"generated":{"line":1414,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":10},"generated":{"line":1415,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":18},"generated":{"line":1415,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":21},"generated":{"line":1415,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":26},"generated":{"line":1415,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":31},"generated":{"line":1415,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":36},"generated":{"line":1415,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":41},"generated":{"line":1415,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":52},"generated":{"line":1415,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":17},"generated":{"line":1415,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":64},"generated":{"line":1415,"column":72}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1416,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":17},"generated":{"line":1416,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":18},"generated":{"line":1416,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":17},"generated":{"line":1416,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1416,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":28},"generated":{"line":1416,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1416,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":31},"generated":{"line":1416,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1416,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":37},"generated":{"line":1416,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1416,"column":54}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":55},"generated":{"line":1416,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":56},"generated":{"line":1416,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":59},"generated":{"line":1416,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":62},"generated":{"line":1416,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":55},"generated":{"line":1416,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":68},"generated":{"line":1416,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":55},"generated":{"line":1416,"column":77}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":76},"generated":{"line":1416,"column":78}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":55},"generated":{"line":1416,"column":79}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":81},"generated":{"line":1416,"column":83}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1416,"column":89}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":12},"generated":{"line":1417,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":17},"generated":{"line":1417,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":18},"generated":{"line":1417,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":17},"generated":{"line":1417,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":12},"generated":{"line":1417,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":28},"generated":{"line":1417,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":12},"generated":{"line":1417,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":31},"generated":{"line":1417,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":12},"generated":{"line":1417,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":37},"generated":{"line":1417,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":12},"generated":{"line":1417,"column":54}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":55},"generated":{"line":1417,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":56},"generated":{"line":1417,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":59},"generated":{"line":1417,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":62},"generated":{"line":1417,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":55},"generated":{"line":1417,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":68},"generated":{"line":1417,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":55},"generated":{"line":1417,"column":77}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":76},"generated":{"line":1417,"column":78}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":55},"generated":{"line":1417,"column":79}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":81},"generated":{"line":1417,"column":83}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":107,"column":12},"generated":{"line":1417,"column":89}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":12},"generated":{"line":1418,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":17},"generated":{"line":1418,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":18},"generated":{"line":1418,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":17},"generated":{"line":1418,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":12},"generated":{"line":1418,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":28},"generated":{"line":1418,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":12},"generated":{"line":1418,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":31},"generated":{"line":1418,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":12},"generated":{"line":1418,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":43},"generated":{"line":1418,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":48},"generated":{"line":1418,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":49},"generated":{"line":1418,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":48},"generated":{"line":1418,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":43},"generated":{"line":1418,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":54},"generated":{"line":1418,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":59},"generated":{"line":1418,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":60},"generated":{"line":1418,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":59},"generated":{"line":1418,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":43},"generated":{"line":1418,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":66},"generated":{"line":1418,"column":67}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":69},"generated":{"line":1418,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":72},"generated":{"line":1418,"column":73}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":82},"generated":{"line":1418,"column":83}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":85},"generated":{"line":1418,"column":86}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":86},"generated":{"line":1418,"column":87}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":82},"generated":{"line":1418,"column":94}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":94},"generated":{"line":1418,"column":95}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":82},"generated":{"line":1418,"column":96}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":72},"generated":{"line":1418,"column":97}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":99},"generated":{"line":1418,"column":100}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":69},"generated":{"line":1418,"column":104}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":106},"generated":{"line":1418,"column":107}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":108,"column":12},"generated":{"line":1418,"column":109}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":12},"generated":{"line":1419,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":17},"generated":{"line":1419,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":18},"generated":{"line":1419,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":17},"generated":{"line":1419,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":12},"generated":{"line":1419,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":28},"generated":{"line":1419,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":12},"generated":{"line":1419,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":31},"generated":{"line":1419,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":12},"generated":{"line":1419,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":43},"generated":{"line":1419,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":46},"generated":{"line":1419,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":47},"generated":{"line":1419,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":43},"generated":{"line":1419,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":55},"generated":{"line":1419,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":43},"generated":{"line":1419,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":60},"generated":{"line":1419,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":109,"column":12},"generated":{"line":1419,"column":68}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":12},"generated":{"line":1420,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":19},"generated":{"line":1420,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":24},"generated":{"line":1420,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":25},"generated":{"line":1420,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":24},"generated":{"line":1420,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":29},"generated":{"line":1420,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":34},"generated":{"line":1420,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":39},"generated":{"line":1420,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":44},"generated":{"line":1420,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":49},"generated":{"line":1420,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":60},"generated":{"line":1420,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":18},"generated":{"line":1420,"column":69}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":110,"column":12},"generated":{"line":1420,"column":70}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":111,"column":11},"generated":{"line":1421,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":105,"column":10},"generated":{"line":1421,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":9},"generated":{"line":1422,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":27},"generated":{"line":1422,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":11},"generated":{"line":1422,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":16},"generated":{"line":1422,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":27},"generated":{"line":1422,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":29},"generated":{"line":1422,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":34},"generated":{"line":1422,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":27},"generated":{"line":1422,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":39},"generated":{"line":1422,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":112,"column":44},"generated":{"line":1422,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":27},"generated":{"line":1422,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":100,"column":8},"generated":{"line":1422,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":8},"generated":{"line":1424,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":13},"generated":{"line":1424,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":8},"generated":{"line":1424,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":28},"generated":{"line":1424,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":29},"generated":{"line":1424,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":28},"generated":{"line":1424,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":37},"generated":{"line":1424,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":28},"generated":{"line":1424,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":45},"generated":{"line":1424,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":10},"generated":{"line":1425,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":14},"generated":{"line":1425,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":19},"generated":{"line":1425,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":22},"generated":{"line":1425,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":24},"generated":{"line":1426,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":36},"generated":{"line":1426,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":39},"generated":{"line":1426,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":40},"generated":{"line":1426,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":36},"generated":{"line":1426,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":63},"generated":{"line":1426,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":36},"generated":{"line":1426,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":22},"generated":{"line":1427,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":115,"column":10},"generated":{"line":1427,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":10},"generated":{"line":1428,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":17},"generated":{"line":1428,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":18},"generated":{"line":1428,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":17},"generated":{"line":1428,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":21},"generated":{"line":1428,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":17},"generated":{"line":1428,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":28},"generated":{"line":1428,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":17},"generated":{"line":1428,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":43},"generated":{"line":1428,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":117,"column":12},"generated":{"line":1429,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":117,"column":16},"generated":{"line":1429,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":117,"column":22},"generated":{"line":1429,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":117,"column":25},"generated":{"line":1429,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":117,"column":12},"generated":{"line":1429,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":12},"generated":{"line":1430,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":16},"generated":{"line":1430,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":19},"generated":{"line":1430,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":22},"generated":{"line":1430,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":27},"generated":{"line":1430,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":28},"generated":{"line":1430,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":118,"column":12},"generated":{"line":1430,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":12},"generated":{"line":1432,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":17},"generated":{"line":1432,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":21},"generated":{"line":1432,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":22},"generated":{"line":1432,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":25},"generated":{"line":1432,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":12},"generated":{"line":1432,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":28},"generated":{"line":1432,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":29},"generated":{"line":1432,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":32},"generated":{"line":1432,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":12},"generated":{"line":1432,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":37},"generated":{"line":1432,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":38},"generated":{"line":1432,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":12},"generated":{"line":1432,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":119,"column":42},"generated":{"line":1432,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":14},"generated":{"line":1433,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":18},"generated":{"line":1433,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":20},"generated":{"line":1433,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":23},"generated":{"line":1433,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":24},"generated":{"line":1433,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":34},"generated":{"line":1433,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":37},"generated":{"line":1433,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":24},"generated":{"line":1433,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":41},"generated":{"line":1433,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":23},"generated":{"line":1433,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":46},"generated":{"line":1433,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":120,"column":14},"generated":{"line":1433,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":14},"generated":{"line":1435,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":18},"generated":{"line":1435,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":23},"generated":{"line":1435,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":24},"generated":{"line":1435,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":23},"generated":{"line":1435,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":18},"generated":{"line":1435,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":31},"generated":{"line":1435,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":14},"generated":{"line":1435,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":121,"column":42},"generated":{"line":1435,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":16},"generated":{"line":1436,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":22},"generated":{"line":1436,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":25},"generated":{"line":1436,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":31},"generated":{"line":1436,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":34},"generated":{"line":1436,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":25},"generated":{"line":1436,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":40},"generated":{"line":1436,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":41},"generated":{"line":1436,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":46},"generated":{"line":1436,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":41},"generated":{"line":1436,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":51},"generated":{"line":1436,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":54},"generated":{"line":1436,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":57},"generated":{"line":1436,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":41},"generated":{"line":1436,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":40},"generated":{"line":1436,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":61},"generated":{"line":1436,"column":65}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":40},"generated":{"line":1436,"column":72}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":69},"generated":{"line":1436,"column":73}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":40},"generated":{"line":1436,"column":74}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":25},"generated":{"line":1436,"column":75}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":74},"generated":{"line":1436,"column":78}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":25},"generated":{"line":1436,"column":81}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":20},"generated":{"line":1436,"column":84}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":21},"generated":{"line":1436,"column":85}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":26},"generated":{"line":1436,"column":90}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":31},"generated":{"line":1436,"column":95}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":32},"generated":{"line":1436,"column":96}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":31},"generated":{"line":1436,"column":98}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":26},"generated":{"line":1436,"column":99}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":38},"generated":{"line":1436,"column":102}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":26},"generated":{"line":1436,"column":104}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":43},"generated":{"line":1436,"column":107}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":26},"generated":{"line":1436,"column":109}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":48},"generated":{"line":1436,"column":112}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":52},"generated":{"line":1436,"column":118}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":53},"generated":{"line":1436,"column":119}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":20},"generated":{"line":1436,"column":127}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":63},"generated":{"line":1436,"column":129}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":20},"generated":{"line":1436,"column":136}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":71},"generated":{"line":1436,"column":137}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":123,"column":20},"generated":{"line":1436,"column":138}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":122,"column":16},"generated":{"line":1436,"column":139}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":124,"column":15},"generated":{"line":1437,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":125,"column":13},"generated":{"line":1438,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":12},"generated":{"line":1440,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":17},"generated":{"line":1440,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":18},"generated":{"line":1440,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":17},"generated":{"line":1440,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":12},"generated":{"line":1440,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":30},"generated":{"line":1440,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":12},"generated":{"line":1440,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":33},"generated":{"line":1440,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":12},"generated":{"line":1440,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":46},"generated":{"line":1440,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":12},"generated":{"line":1440,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":56},"generated":{"line":1440,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":126,"column":12},"generated":{"line":1440,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":12},"generated":{"line":1441,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":18},"generated":{"line":1441,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":19},"generated":{"line":1441,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":23},"generated":{"line":1441,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":24},"generated":{"line":1441,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":19},"generated":{"line":1441,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":30},"generated":{"line":1441,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":19},"generated":{"line":1441,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":18},"generated":{"line":1441,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":34},"generated":{"line":1441,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":18},"generated":{"line":1441,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":41},"generated":{"line":1441,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":18},"generated":{"line":1441,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":127,"column":12},"generated":{"line":1441,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":128,"column":11},"generated":{"line":1442,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":116,"column":10},"generated":{"line":1442,"column":13}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":129,"column":9},"generated":{"line":1443,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":27},"generated":{"line":1443,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":129,"column":11},"generated":{"line":1443,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":129,"column":16},"generated":{"line":1443,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":27},"generated":{"line":1443,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":129,"column":29},"generated":{"line":1443,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":129,"column":34},"generated":{"line":1443,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":27},"generated":{"line":1443,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":114,"column":8},"generated":{"line":1443,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":130,"column":7},"generated":{"line":1444,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":131,"column":5},"generated":{"line":1445,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":133,"column":0},"generated":{"line":1446,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":134,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":135,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":136,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1452,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1453,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1454,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":137,"column":4},"generated":{"line":1454,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":137,"column":10},"generated":{"line":1454,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":137,"column":4},"generated":{"line":1454,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":137,"column":16},"generated":{"line":1454,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":6},"generated":{"line":1455,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":10},"generated":{"line":1455,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":15},"generated":{"line":1455,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":10},"generated":{"line":1455,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":21},"generated":{"line":1455,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":10},"generated":{"line":1455,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":29},"generated":{"line":1455,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":10},"generated":{"line":1455,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":38},"generated":{"line":1455,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":39},"generated":{"line":1455,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":6},"generated":{"line":1455,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":138,"column":42},"generated":{"line":1455,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":8},"generated":{"line":1456,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":13},"generated":{"line":1456,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":8},"generated":{"line":1456,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":19},"generated":{"line":1456,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":8},"generated":{"line":1456,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":24},"generated":{"line":1456,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":139,"column":8},"generated":{"line":1456,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":140,"column":8},"generated":{"line":1458,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":140,"column":12},"generated":{"line":1458,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":140,"column":17},"generated":{"line":1458,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":140,"column":8},"generated":{"line":1458,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":140,"column":22},"generated":{"line":1458,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":10},"generated":{"line":1459,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":15},"generated":{"line":1459,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":10},"generated":{"line":1459,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":19},"generated":{"line":1459,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":10},"generated":{"line":1459,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":38},"generated":{"line":1459,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":10},"generated":{"line":1459,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":51},"generated":{"line":1459,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":56},"generated":{"line":1459,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":141,"column":10},"generated":{"line":1459,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":142,"column":10},"generated":{"line":1460,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":142,"column":15},"generated":{"line":1460,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":142,"column":10},"generated":{"line":1460,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":143,"column":9},"generated":{"line":1461,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":8},"generated":{"line":1463,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":13},"generated":{"line":1463,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":8},"generated":{"line":1463,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":23},"generated":{"line":1463,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":8},"generated":{"line":1463,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":28},"generated":{"line":1463,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":144,"column":8},"generated":{"line":1463,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":8},"generated":{"line":1464,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":13},"generated":{"line":1464,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":8},"generated":{"line":1464,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":23},"generated":{"line":1464,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":8},"generated":{"line":1464,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":28},"generated":{"line":1464,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":145,"column":8},"generated":{"line":1464,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":8},"generated":{"line":1465,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":13},"generated":{"line":1465,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":8},"generated":{"line":1465,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":26},"generated":{"line":1465,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":8},"generated":{"line":1465,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":31},"generated":{"line":1465,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":146,"column":8},"generated":{"line":1465,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":147,"column":7},"generated":{"line":1466,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":148,"column":5},"generated":{"line":1467,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":150,"column":0},"generated":{"line":1468,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":151,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":152,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":153,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1473,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1474,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1475,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":4},"generated":{"line":1475,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":14},"generated":{"line":1475,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":4},"generated":{"line":1475,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":19},"generated":{"line":1475,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":19},"generated":{"line":1476,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":155,"column":6},"generated":{"line":1478,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":155,"column":11},"generated":{"line":1478,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":155,"column":6},"generated":{"line":1478,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":6},"generated":{"line":1479,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":12},"generated":{"line":1479,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":13},"generated":{"line":1479,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":16},"generated":{"line":1479,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":19},"generated":{"line":1479,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":22},"generated":{"line":1479,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":19},"generated":{"line":1479,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":28},"generated":{"line":1479,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":33},"generated":{"line":1479,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":28},"generated":{"line":1479,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":156,"column":6},"generated":{"line":1479,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":19},"generated":{"line":1479,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":158,"column":0},"generated":{"line":1479,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":6},"generated":{"line":1481,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":10},"generated":{"line":1481,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":15},"generated":{"line":1481,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":10},"generated":{"line":1481,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":26},"generated":{"line":1481,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":6},"generated":{"line":1481,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":29},"generated":{"line":1481,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":160,"column":8},"generated":{"line":1482,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":160,"column":13},"generated":{"line":1482,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":160,"column":8},"generated":{"line":1482,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":160,"column":26},"generated":{"line":1482,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":160,"column":31},"generated":{"line":1482,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":160,"column":8},"generated":{"line":1482,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":161,"column":8},"generated":{"line":1483,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":161,"column":13},"generated":{"line":1483,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":161,"column":8},"generated":{"line":1483,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":161,"column":25},"generated":{"line":1483,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":161,"column":8},"generated":{"line":1483,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":162,"column":7},"generated":{"line":1484,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":159,"column":6},"generated":{"line":1484,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":162,"column":13},"generated":{"line":1484,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":8},"generated":{"line":1485,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":12},"generated":{"line":1485,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":20},"generated":{"line":1485,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":23},"generated":{"line":1485,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":24},"generated":{"line":1485,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":27},"generated":{"line":1485,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":32},"generated":{"line":1485,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":163,"column":8},"generated":{"line":1485,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":8},"generated":{"line":1487,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":12},"generated":{"line":1487,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":20},"generated":{"line":1487,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":24},"generated":{"line":1487,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":8},"generated":{"line":1487,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":29},"generated":{"line":1487,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":10},"generated":{"line":1488,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":16},"generated":{"line":1488,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":26},"generated":{"line":1488,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":29},"generated":{"line":1488,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":34},"generated":{"line":1488,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":29},"generated":{"line":1488,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":44},"generated":{"line":1488,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":49},"generated":{"line":1488,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":165,"column":10},"generated":{"line":1488,"column":61}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":10},"generated":{"line":1489,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":16},"generated":{"line":1489,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":19},"generated":{"line":1489,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":22},"generated":{"line":1489,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":32},"generated":{"line":1489,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":35},"generated":{"line":1489,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":22},"generated":{"line":1489,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":46},"generated":{"line":1489,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":166,"column":10},"generated":{"line":1489,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":29},"generated":{"line":1491,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":19},"generated":{"line":1491,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":29},"generated":{"line":1491,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":12},"generated":{"line":1492,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":18},"generated":{"line":1492,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":21},"generated":{"line":1492,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":24},"generated":{"line":1492,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":28},"generated":{"line":1492,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":29},"generated":{"line":1492,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":24},"generated":{"line":1492,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":39},"generated":{"line":1492,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":24},"generated":{"line":1492,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":44},"generated":{"line":1492,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":24},"generated":{"line":1492,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":55},"generated":{"line":1492,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":12},"generated":{"line":1492,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":12},"generated":{"line":1493,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":14},"generated":{"line":1493,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":17},"generated":{"line":1493,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":20},"generated":{"line":1493,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":24},"generated":{"line":1493,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":25},"generated":{"line":1493,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":20},"generated":{"line":1493,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":35},"generated":{"line":1493,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":20},"generated":{"line":1493,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":40},"generated":{"line":1493,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":20},"generated":{"line":1493,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":169,"column":51},"generated":{"line":1493,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":12},"generated":{"line":1493,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":12},"generated":{"line":1494,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":14},"generated":{"line":1494,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":17},"generated":{"line":1494,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":21},"generated":{"line":1494,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":32},"generated":{"line":1494,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":36},"generated":{"line":1494,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":47},"generated":{"line":1494,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":48},"generated":{"line":1494,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":20},"generated":{"line":1494,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":58},"generated":{"line":1494,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":69},"generated":{"line":1494,"column":73}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":70},"generated":{"line":1494,"column":74}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":58},"generated":{"line":1494,"column":80}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":77},"generated":{"line":1494,"column":81}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":58},"generated":{"line":1494,"column":95}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":95},"generated":{"line":1494,"column":99}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":100},"generated":{"line":1494,"column":104}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":58},"generated":{"line":1494,"column":106}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":20},"generated":{"line":1494,"column":107}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":170,"column":106},"generated":{"line":1494,"column":110}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":168,"column":12},"generated":{"line":1494,"column":111}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":16},"generated":{"line":1496,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":17},"generated":{"line":1496,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":29},"generated":{"line":1496,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":32},"generated":{"line":1496,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":37},"generated":{"line":1496,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":42},"generated":{"line":1496,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":47},"generated":{"line":1496,"column":54}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":52},"generated":{"line":1496,"column":59}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":67}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":62},"generated":{"line":1496,"column":69}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":171,"column":12},"generated":{"line":1496,"column":79}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":12},"generated":{"line":1498,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":16},"generated":{"line":1498,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":17},"generated":{"line":1498,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":12},"generated":{"line":1498,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":27},"generated":{"line":1498,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":12},"generated":{"line":1498,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":32},"generated":{"line":1498,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":172,"column":12},"generated":{"line":1498,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":12},"generated":{"line":1499,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":19},"generated":{"line":1499,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":20},"generated":{"line":1499,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":12},"generated":{"line":1499,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":24},"generated":{"line":1499,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":28},"generated":{"line":1499,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":29},"generated":{"line":1499,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":12},"generated":{"line":1499,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":39},"generated":{"line":1499,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":12},"generated":{"line":1499,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":44},"generated":{"line":1499,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":50},"generated":{"line":1499,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":14},"generated":{"line":1500,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":18},"generated":{"line":1500,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":19},"generated":{"line":1500,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":14},"generated":{"line":1500,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":29},"generated":{"line":1500,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":14},"generated":{"line":1500,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":34},"generated":{"line":1500,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":174,"column":14},"generated":{"line":1500,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":175,"column":14},"generated":{"line":1501,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":175,"column":18},"generated":{"line":1501,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":175,"column":19},"generated":{"line":1501,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":175,"column":14},"generated":{"line":1501,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":175,"column":30},"generated":{"line":1501,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":175,"column":14},"generated":{"line":1501,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":176,"column":13},"generated":{"line":1502,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":173,"column":12},"generated":{"line":1502,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":164,"column":29},"generated":{"line":1503,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":10},"generated":{"line":1505,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":15},"generated":{"line":1505,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":19},"generated":{"line":1505,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":20},"generated":{"line":1505,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":23},"generated":{"line":1505,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":10},"generated":{"line":1505,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":26},"generated":{"line":1505,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":27},"generated":{"line":1505,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":30},"generated":{"line":1505,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":35},"generated":{"line":1505,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":30},"generated":{"line":1505,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":41},"generated":{"line":1505,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":10},"generated":{"line":1505,"column":51}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":49},"generated":{"line":1505,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":50},"generated":{"line":1505,"column":54}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":10},"generated":{"line":1505,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":54},"generated":{"line":1505,"column":58}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":54},"generated":{"line":1506,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":19},"generated":{"line":1506,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":167,"column":54},"generated":{"line":1506,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":177,"column":11},"generated":{"line":1507,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":178,"column":10},"generated":{"line":1509,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":178,"column":15},"generated":{"line":1509,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":178,"column":10},"generated":{"line":1509,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":178,"column":28},"generated":{"line":1509,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":178,"column":33},"generated":{"line":1509,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":178,"column":10},"generated":{"line":1509,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":179,"column":10},"generated":{"line":1510,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":179,"column":15},"generated":{"line":1510,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":179,"column":10},"generated":{"line":1510,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":179,"column":27},"generated":{"line":1510,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":179,"column":10},"generated":{"line":1510,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":180,"column":9},"generated":{"line":1511,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":181,"column":7},"generated":{"line":1512,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":154,"column":19},"generated":{"line":1512,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":183,"column":0},"generated":{"line":1512,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":6},"generated":{"line":1515,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":10},"generated":{"line":1515,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":11},"generated":{"line":1515,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":16},"generated":{"line":1515,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":10},"generated":{"line":1515,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":28},"generated":{"line":1515,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":29},"generated":{"line":1515,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":34},"generated":{"line":1515,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":6},"generated":{"line":1515,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":46},"generated":{"line":1515,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":185,"column":8},"generated":{"line":1516,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":185,"column":13},"generated":{"line":1516,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":185,"column":8},"generated":{"line":1516,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":185,"column":26},"generated":{"line":1516,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":185,"column":31},"generated":{"line":1516,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":185,"column":8},"generated":{"line":1516,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":186,"column":8},"generated":{"line":1517,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":186,"column":13},"generated":{"line":1517,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":186,"column":8},"generated":{"line":1517,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":186,"column":25},"generated":{"line":1517,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":186,"column":8},"generated":{"line":1517,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":187,"column":8},"generated":{"line":1518,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":187,"column":13},"generated":{"line":1518,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":187,"column":8},"generated":{"line":1518,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":187,"column":26},"generated":{"line":1518,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":187,"column":8},"generated":{"line":1518,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":188,"column":7},"generated":{"line":1519,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":184,"column":6},"generated":{"line":1519,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":188,"column":13},"generated":{"line":1519,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":8},"generated":{"line":1520,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":12},"generated":{"line":1520,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":20},"generated":{"line":1520,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":23},"generated":{"line":1520,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":24},"generated":{"line":1520,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":27},"generated":{"line":1520,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":32},"generated":{"line":1520,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":189,"column":8},"generated":{"line":1520,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":8},"generated":{"line":1521,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":12},"generated":{"line":1521,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":14},"generated":{"line":1521,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":17},"generated":{"line":1521,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":22},"generated":{"line":1521,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":17},"generated":{"line":1521,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":32},"generated":{"line":1521,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":17},"generated":{"line":1521,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":43},"generated":{"line":1521,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":190,"column":8},"generated":{"line":1521,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":8},"generated":{"line":1523,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":15},"generated":{"line":1523,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":17},"generated":{"line":1523,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":15},"generated":{"line":1523,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":22},"generated":{"line":1523,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":15},"generated":{"line":1523,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":27},"generated":{"line":1523,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":32},"generated":{"line":1523,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":8},"generated":{"line":1523,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":191,"column":42},"generated":{"line":1523,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":10},"generated":{"line":1524,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":16},"generated":{"line":1524,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":26},"generated":{"line":1524,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":29},"generated":{"line":1524,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":34},"generated":{"line":1524,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":29},"generated":{"line":1524,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":44},"generated":{"line":1524,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":49},"generated":{"line":1524,"column":52}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":192,"column":10},"generated":{"line":1524,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":10},"generated":{"line":1526,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":16},"generated":{"line":1526,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":19},"generated":{"line":1526,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":22},"generated":{"line":1526,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":32},"generated":{"line":1526,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":35},"generated":{"line":1526,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":22},"generated":{"line":1526,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":46},"generated":{"line":1526,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":193,"column":10},"generated":{"line":1526,"column":53}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":10},"generated":{"line":1528,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":15},"generated":{"line":1528,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":10},"generated":{"line":1528,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":21},"generated":{"line":1528,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":26},"generated":{"line":1528,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":21},"generated":{"line":1528,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":39},"generated":{"line":1528,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":44},"generated":{"line":1528,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":10},"generated":{"line":1528,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":56},"generated":{"line":1528,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":194,"column":10},"generated":{"line":1528,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":10},"generated":{"line":1530,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":15},"generated":{"line":1530,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":19},"generated":{"line":1530,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":20},"generated":{"line":1530,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":23},"generated":{"line":1530,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":10},"generated":{"line":1530,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":26},"generated":{"line":1530,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":27},"generated":{"line":1530,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":30},"generated":{"line":1530,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":35},"generated":{"line":1530,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":30},"generated":{"line":1530,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":41},"generated":{"line":1530,"column":49}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":10},"generated":{"line":1530,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":49},"generated":{"line":1530,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":50},"generated":{"line":1530,"column":60}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":10},"generated":{"line":1530,"column":62}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":195,"column":54},"generated":{"line":1530,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":12},"generated":{"line":1531,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":17},"generated":{"line":1531,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":12},"generated":{"line":1531,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":29},"generated":{"line":1531,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":12},"generated":{"line":1531,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":32},"generated":{"line":1531,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":37},"generated":{"line":1531,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":12},"generated":{"line":1531,"column":48}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":44},"generated":{"line":1531,"column":50}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":49},"generated":{"line":1531,"column":55}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":196,"column":12},"generated":{"line":1531,"column":65}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":197,"column":11},"generated":{"line":1532,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":198,"column":10},"generated":{"line":1534,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":198,"column":15},"generated":{"line":1534,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":198,"column":10},"generated":{"line":1534,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":199,"column":10},"generated":{"line":1535,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":199,"column":15},"generated":{"line":1535,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":199,"column":10},"generated":{"line":1535,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":199,"column":28},"generated":{"line":1535,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":199,"column":33},"generated":{"line":1535,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":199,"column":10},"generated":{"line":1535,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":200,"column":10},"generated":{"line":1536,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":200,"column":15},"generated":{"line":1536,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":200,"column":10},"generated":{"line":1536,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":200,"column":27},"generated":{"line":1536,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":200,"column":10},"generated":{"line":1536,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":201,"column":9},"generated":{"line":1537,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":202,"column":7},"generated":{"line":1538,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":203,"column":5},"generated":{"line":1539,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":205,"column":0},"generated":{"line":1540,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":206,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":207,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":208,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1545,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1546,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1547,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":209,"column":4},"generated":{"line":1547,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":209,"column":10},"generated":{"line":1547,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":209,"column":4},"generated":{"line":1547,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":209,"column":16},"generated":{"line":1547,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":210,"column":6},"generated":{"line":1548,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":210,"column":11},"generated":{"line":1548,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":210,"column":6},"generated":{"line":1548,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":210,"column":24},"generated":{"line":1548,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":210,"column":6},"generated":{"line":1548,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":211,"column":5},"generated":{"line":1549,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":213,"column":0},"generated":{"line":1550,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":214,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":215,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":216,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1555,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1556,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1557,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":217,"column":4},"generated":{"line":1557,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":217,"column":8},"generated":{"line":1557,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":217,"column":4},"generated":{"line":1557,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":217,"column":14},"generated":{"line":1557,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":218,"column":6},"generated":{"line":1558,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":218,"column":11},"generated":{"line":1558,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":218,"column":6},"generated":{"line":1558,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":218,"column":24},"generated":{"line":1558,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":218,"column":6},"generated":{"line":1558,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":219,"column":5},"generated":{"line":1559,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1560,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1561,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1562,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":221,"column":4},"generated":{"line":1562,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":221,"column":17},"generated":{"line":1562,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":221,"column":4},"generated":{"line":1562,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":221,"column":23},"generated":{"line":1562,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":6},"generated":{"line":1563,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":10},"generated":{"line":1563,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":16},"generated":{"line":1563,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":19},"generated":{"line":1563,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":24},"generated":{"line":1563,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":19},"generated":{"line":1563,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":30},"generated":{"line":1563,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":19},"generated":{"line":1563,"column":41}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":38},"generated":{"line":1563,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":19},"generated":{"line":1563,"column":46}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":222,"column":6},"generated":{"line":1563,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":6},"generated":{"line":1565,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":10},"generated":{"line":1565,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":16},"generated":{"line":1565,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":20},"generated":{"line":1565,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":21},"generated":{"line":1565,"column":25}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":6},"generated":{"line":1565,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":223,"column":24},"generated":{"line":1565,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":8},"generated":{"line":1566,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":14},"generated":{"line":1566,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":17},"generated":{"line":1566,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":22},"generated":{"line":1566,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":17},"generated":{"line":1566,"column":31}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":28},"generated":{"line":1566,"column":32}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":224,"column":8},"generated":{"line":1566,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":225,"column":8},"generated":{"line":1567,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":225,"column":13},"generated":{"line":1567,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":225,"column":8},"generated":{"line":1567,"column":22}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":225,"column":19},"generated":{"line":1567,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":225,"column":8},"generated":{"line":1567,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":226,"column":7},"generated":{"line":1568,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":6},"generated":{"line":1570,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":12},"generated":{"line":1570,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":13},"generated":{"line":1570,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":16},"generated":{"line":1570,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":21},"generated":{"line":1570,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":16},"generated":{"line":1570,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":228,"column":6},"generated":{"line":1570,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":6},"generated":{"line":1571,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":12},"generated":{"line":1571,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":14},"generated":{"line":1571,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":17},"generated":{"line":1571,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":18},"generated":{"line":1571,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":21},"generated":{"line":1571,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":26},"generated":{"line":1571,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":229,"column":6},"generated":{"line":1571,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":6},"generated":{"line":1573,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":11},"generated":{"line":1573,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":15},"generated":{"line":1573,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":16},"generated":{"line":1573,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":19},"generated":{"line":1573,"column":23}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":6},"generated":{"line":1573,"column":24}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":22},"generated":{"line":1573,"column":26}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":23},"generated":{"line":1573,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":26},"generated":{"line":1573,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":32},"generated":{"line":1573,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":35},"generated":{"line":1573,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":6},"generated":{"line":1573,"column":40}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":38},"generated":{"line":1573,"column":42}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":39},"generated":{"line":1573,"column":43}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":6},"generated":{"line":1573,"column":45}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":230,"column":43},"generated":{"line":1573,"column":47}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":8},"generated":{"line":1574,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":12},"generated":{"line":1574,"column":16}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":17},"generated":{"line":1574,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":12},"generated":{"line":1574,"column":33}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":30},"generated":{"line":1574,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":12},"generated":{"line":1574,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":8},"generated":{"line":1574,"column":36}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":231,"column":34},"generated":{"line":1574,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":10},"generated":{"line":1575,"column":14}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":15},"generated":{"line":1575,"column":19}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":10},"generated":{"line":1575,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":25},"generated":{"line":1575,"column":29}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":10},"generated":{"line":1575,"column":30}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":31},"generated":{"line":1575,"column":35}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":232,"column":10},"generated":{"line":1575,"column":37}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":233,"column":9},"generated":{"line":1576,"column":12}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":7},"generated":{"line":1577,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":11},"generated":{"line":1579,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":16},"generated":{"line":1579,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":11},"generated":{"line":1579,"column":27}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":29},"generated":{"line":1579,"column":28}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":11},"generated":{"line":1579,"column":34}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":39},"generated":{"line":1579,"column":38}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":40},"generated":{"line":1579,"column":39}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":45},"generated":{"line":1579,"column":44}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":40},"generated":{"line":1579,"column":56}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":58},"generated":{"line":1579,"column":57}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":40},"generated":{"line":1579,"column":63}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":234,"column":11},"generated":{"line":1579,"column":64}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":235,"column":6},"generated":{"line":1580,"column":10}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":235,"column":11},"generated":{"line":1580,"column":15}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":235,"column":6},"generated":{"line":1580,"column":17}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":235,"column":16},"generated":{"line":1580,"column":20}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":235,"column":6},"generated":{"line":1580,"column":21}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":236,"column":5},"generated":{"line":1581,"column":8}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1582,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1584,"column":6}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":5,"column":21},"generated":{"line":1585,"column":4}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":240,"column":2},"generated":{"line":1587,"column":4}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":240,"column":9},"generated":{"line":1587,"column":11}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":240,"column":2},"generated":{"line":1587,"column":18}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":242,"column":1},"generated":{"line":1588,"column":2}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":1},"generated":{"line":1588,"column":3}},{"source":"../node_modules/gl-bench/dist/gl-bench.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1588,"column":4}}],"sources":{"../node_modules/gl-bench/dist/gl-bench.js":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.GLBench = factory());\n}(this, (function () { 'use strict';\n\n  var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n\n  var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n  class GLBench {\n\n    /** GLBench constructor\n     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n     * @param { Object | undefined } settings additional settings\n     */\n    constructor(gl, settings = {}) {\n      this.css = UICSS;\n      this.svg = UISVG;\n      this.paramLogger = () => {};\n      this.chartLogger = () => {};\n      this.chartLen = 20;\n      this.chartHz = 20;\n\n      this.names = [];\n      this.cpuAccums = [];\n      this.gpuAccums = [];  \n      this.activeAccums = [];\n      this.chart = new Array(this.chartLen);\n      this.now = () => (performance && performance.now) ? performance.now() : Date.now();\n      this.updateUI = () => {\n        [].forEach.call(this.nodes['gl-gpu-svg'], node => {\n          node.style.display = this.trackGPU ? 'inline' : 'none';\n        });\n      };\n\n      Object.assign(this, settings);\n      this.detected = 0;\n      this.finished = [];\n      this.isFramebuffer = 0;\n      this.frameId = 0;\n\n      // 120hz device detection\n      let rafId, n = 0, t0;\n      let loop = (t) => {\n        if (++n < 20) {\n          rafId = requestAnimationFrame(loop);\n        } else {\n          this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n          cancelAnimationFrame(rafId);\n        }\n        if (!t0) t0 = t;\n      };\n      requestAnimationFrame(loop);\n\n      // attach gpu profilers\n      if (gl) {\n        const glFinish = async (t, activeAccums) =>\n          Promise.resolve(setTimeout(() => {\n            gl.getError();\n            const dt = this.now() - t;\n            activeAccums.forEach((active, i) => {\n              if (active) this.gpuAccums[i] += dt;\n            });\n          }, 0));\n\n        const addProfiler = (fn, self, target) => function() {\n          const t = self.now();\n          fn.apply(target, arguments);\n          if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n        };\n\n        ['drawArrays', 'drawElements', 'drawArraysInstanced',\n          'drawBuffers', 'drawElementsInstanced', 'drawRangeElements']\n          .forEach(fn => { if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl); });\n\n        gl.getExtension = ((fn, self) => function() {\n          let ext = fn.apply(gl, arguments);\n          if (ext) {\n            ['drawElementsInstancedANGLE', 'drawBuffersWEBGL']\n              .forEach(fn => { if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext); });\n          }\n          return ext;\n        })(gl.getExtension, this);\n      }\n\n      // init ui and ui loggers\n      if (!this.withoutUI) {\n        if (!this.dom) this.dom = document.body;\n        let elm = document.createElement('div');\n        elm.id = 'gl-bench';\n        this.dom.appendChild(elm);\n        this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n        this.dom = elm;\n        this.dom.addEventListener('click', () => {\n          this.trackGPU = !this.trackGPU;\n          this.updateUI();\n        });\n\n        this.paramLogger = ((logger, dom, names) => {\n          const classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n          const nodes = Object.assign({}, classes);\n          classes.forEach(c => nodes[c] = dom.getElementsByClassName(c));\n          this.nodes = nodes;\n          return (i, cpu, gpu, mem, fps, totalTime, frameId) => {\n            nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : (mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '');\n            nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n          }\n        })(this.paramLogger, this.dom, this.names);\n\n        this.chartLogger = ((logger, dom) => {\n          let nodes = { 'gl-chart': dom.getElementsByClassName('gl-chart') };\n          return (i, chart, circularId) => {\n            let points = '';\n            let len = chart.length;\n            for (let i = 0; i < len; i++) {\n              let id = (circularId + i + 1) % len;\n              if (chart[id] != undefined) {\n                points = points + ' ' + (55 * i / (len - 1)).toFixed(1) + ','\n                  + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n              }\n            }\n            nodes['gl-chart'][i].setAttribute('points', points);\n            logger(this.names[i], chart, circularId);\n          }\n        })(this.chartLogger, this.dom);\n      }\n    }\n\n    /**\n     * Explicit UI add\n     * @param { string | undefined } name \n     */\n    addUI(name) {\n      if (this.names.indexOf(name) == -1) {\n        this.names.push(name);\n        if (this.dom) {\n          this.dom.insertAdjacentHTML('beforeend', this.svg);\n          this.updateUI();\n        }\n        this.cpuAccums.push(0);\n        this.gpuAccums.push(0);\n        this.activeAccums.push(false);\n      }\n    }\n\n    /**\n     * Increase frameID\n     * @param { number | undefined } now\n     */\n    nextFrame(now) {\n      this.frameId++;\n      const t = now ? now : this.now();\n\n      // params\n      if (this.frameId <= 1) {\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      } else {\n        let duration = t - this.paramTime;\n        if (duration >= 1e3) {\n          const frameCount = this.frameId - this.paramFrame;\n          const fps = frameCount / duration * 1e3;\n          for (let i = 0; i < this.names.length; i++) {\n            const cpu = this.cpuAccums[i] / duration * 100,\n              gpu = this.gpuAccums[i] / duration * 100,\n              mem = (performance && performance.memory) ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n            this.cpuAccums[i] = 0;\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n          this.paramFrame = this.frameId;\n          this.paramTime = t;\n        }\n      }\n\n      // chart\n      if (!this.detected || !this.chartFrame) {\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n        this.circularId = 0;\n      } else {\n        let timespan = t - this.chartTime;\n        let hz = this.chartHz * timespan / 1e3;\n        while (--hz > 0 && this.detected) {\n          const frameCount = this.frameId - this.chartFrame;\n          const fps = frameCount / timespan * 1e3;\n          this.chart[this.circularId % this.chartLen] = fps;\n          for (let i = 0; i < this.names.length; i++) {\n            this.chartLogger(i, this.chart, this.circularId);\n          }\n          this.circularId++;\n          this.chartFrame = this.frameId;\n          this.chartTime = t;\n        }\n      }\n    }\n\n    /**\n     * Begin named measurement\n     * @param { string | undefined } name\n     */\n    begin(name) {\n      this.updateAccums(name);\n    }\n\n    /**\n     * End named measure\n     * @param { string | undefined } name\n     */\n    end(name) {\n      this.updateAccums(name);\n    }\n\n    updateAccums(name) {\n      let nameId = this.names.indexOf(name);\n      if (nameId == -1) {\n        nameId = this.names.length;\n        this.addUI(name);\n      }\n\n      const t = this.now();\n      const dt = t - this.t0;\n      for (let i = 0; i < nameId + 1; i++) {\n        if (this.activeAccums[i]) {\n          this.cpuAccums[i] += dt;\n        }\n      }    this.activeAccums[nameId] = !this.activeAccums[nameId];\n      this.t0 = t;\n    }\n\n  }\n\n  return GLBench;\n\n})));\n"},"lineCount":null}},"error":null,"hash":"d9d09e93795518b0b5566115e19acb3d","cacheData":{"env":{}}}